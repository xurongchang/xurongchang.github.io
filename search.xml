<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS笔记</title>
      <link href="posts/1822a0ce/"/>
      <url>posts/1822a0ce/</url>
      
        <content type="html"><![CDATA[<h1 id="1、CSS的相关知识点："><a href="#1、CSS的相关知识点：" class="headerlink" title="1、CSS的相关知识点："></a>1、CSS的相关知识点：</h1><p><strong>①发展史</strong></p><p>css1. 0</p><p>css2.0  DIV+CSS，HTML和CSS结构分离思想，网页变得更简单</p><p>css2.1  浮动，定位</p><p>css3.0  圆角，阴影，动画…..浏览器兼容性…….</p><p><strong>②CSS的基本语法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--规范，&lt;Style&gt; 标签可以编写CSS代码，每一个声明最好使用分号隔开</span></span><br><span class="line"><span class="comment">语法：</span></span><br><span class="line"><span class="comment">选择器&#123;</span></span><br><span class="line"><span class="comment">声明1;</span></span><br><span class="line"><span class="comment">声明2;</span></span><br><span class="line"><span class="comment">声明3;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">例子：</span></span><br><span class="line"><span class="comment">    &lt;style&gt;</span></span><br><span class="line"><span class="comment">        h1&#123;</span></span><br><span class="line"><span class="comment">            color: red;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &lt;/style&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>③外部引入CSS的方法：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使用&lt;link&gt;即可引入CSS，&lt;link&gt;标签最好写在&lt;head&gt;标签的内部--&gt;</span></span><br></pre></td></tr></table></figure><p><strong>④使用CSS的优势：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1、CSS2.0后，HTML和CSS的都可以分成独立的文件，HTML文件只有html，网页变得更简单的！(即内容和表现分离！)</span><br><span class="line">2、网页结构表现统一的话，可以实现复用。</span><br><span class="line">3、样式十分丰富。</span><br><span class="line">4、利用SEO（搜索引擎优化），容易被搜索引擎收录！</span><br></pre></td></tr></table></figure><p><strong>⑤使用CSS的三种方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!--第二种方式(内部样式)：在 &lt;Style&gt; 标签中编写CSS代码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        h1&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="comment">&lt;!--第三种方式(外部样式)：通过 &lt;link&gt; 标签连接到外部的CSS文件--&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">&lt;!--第一种方式(行内样式)：在标签元素中编写一个 Style 属性，编写样式即可！--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><font color=red>注意点：</font></strong></p><p><strong>如果这三种方式全部作用于一个位置，他们的<font color=red>应用优先级</font>为：<u><code>就近原则(即哪种方式离标签越近，标签就会使用哪种方式的 CSS 样式)</code></u></strong></p><p><strong>⑥拓展：外部样式的两种写法：</strong></p><p><code>1、链接式：</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css/style.css&quot;</span>/&gt;</span><span class="comment">&lt;!--链接式写法，CSS3.0中出现的写法--&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>2、导入式：</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="keyword">@import</span> url(<span class="string">&quot;css/style.css&quot;</span>)</span></span><br><span class="line">    </span><br><span class="line"><span class="css">    <span class="comment">/*导入式写法，CSS2.1中出现的写法。现已废弃*/</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>区别：</strong></p><p><strong>1、属性不同：</strong></p><p><font size=4 color=red face="黑体">link是html提供的标签，不仅可以加载css文件，还能定义 RSS、rel 连接属性等。而</font></p><p><font size=4 color=red face="黑体">@import是css中的语法规则 </font></p><p><strong>2、加载顺序不同：</strong></p><p><font size=4 color=red face="黑体">页面打开时，link引用的css文件被加载。而@import引用的CSS等页面加载完后最后加载。</font></p><p><strong>3、兼容性：</strong></p><p><font size=4 color=red face="黑体">@import是css2.1后提出的，而link是不存在兼容问题。</font></p><p><strong>4、DOM控制性：</strong></p><p><font size=4 color=red face="黑体">js操作DOM，可以使用link改变样式，无法使用@import的方式使用样式。</font></p><h1 id="2、选择器"><a href="#2、选择器" class="headerlink" title="2、选择器"></a>2、选择器</h1><h3 id="2-1、基本选择器："><a href="#2-1、基本选择器：" class="headerlink" title="2.1、基本选择器："></a>2.1、基本选择器：</h3><p>1、标签选择器            选择一类标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="css">        格式：标签名&#123;&#125;</span></span><br><span class="line">        例子：</span><br><span class="line">        h1&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        选中所有h1标签，并将它们的颜色设为红色！</span><br><span class="line">        */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是H3<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、类选择器                选择所以 class 属性相同的标签，可以跨标签使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*</span><br><span class="line"><span class="css">        格式：.类名&#123;&#125;</span></span><br><span class="line">        例子：</span><br><span class="line"><span class="css">        <span class="selector-class">.linlang</span>&#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        选中所有class属性为 linlang 标签，并将它们的颜色设为红色！ 类选择器可以跨标签使用！</span><br><span class="line">        */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;linlang&quot;</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;linlang&quot;</span>&gt;</span>我是H2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;linlang&quot;</span>&gt;</span>我是H3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、ID选择器                全局唯一！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*格式：#ID名&#123;&#125;</span><br><span class="line">        例子：</span><br><span class="line"><span class="css">        <span class="selector-id">#linlang</span>&#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        选中 ID 为 linlang 标签，并将它们的颜色设为红色！ ID选择器全局唯一！*/</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">&quot;linlang&quot;</span>&gt;</span>我是H1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><font color=red face="黑体">选择器的优先级：不遵循就近原则，ID选择器 &gt; 类选择器 &gt; 标签选择器</font></p><h3 id="2-2、层次选择器："><a href="#2-2、层次选择器：" class="headerlink" title="2.2、层次选择器："></a>2.2、层次选择器：</h3><p>1、后代选择器            后代选择器选择一个元素的所有后代。</p><p>2、子选择器                子选择器只选择元素的直接后来，即后代的后代不会受影响。</p><p>3、相邻兄弟选择器        相邻兄弟选择器可以选择同一个父元素下自身所在位置向下一个兄弟元素（对下不对上）</p><p>4、兄弟选择器            兄弟选择器可以选择同一个父元素下自身所在位置向下的所有兄弟元素（对下不对上）</p><h3 id="2-3、结构伪类选择器"><a href="#2-3、结构伪类选择器" class="headerlink" title="2.3、结构伪类选择器"></a>2.3、结构伪类选择器</h3><p><strong>伪类可以理解为过滤的意思</strong></p><p><strong>伪类选择器以 ：开头</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="xml">        /*要求：选中<span class="tag">&lt;<span class="name">ul</span>&gt;</span>下面的第一个<span class="tag">&lt;<span class="name">li</span>&gt;</span>标签,定位到li1*/</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span></span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="xml">        /*要求：选中<span class="tag">&lt;<span class="name">ul</span>&gt;</span>下面的最后一个<span class="tag">&lt;<span class="name">li</span>&gt;</span>标签，定位到li3*/</span></span><br><span class="line"><span class="css">        <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line">            color: green;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="xml">        /*要求：选中<span class="tag">&lt;<span class="name">body</span>&gt;</span>下面的第一个<span class="tag">&lt;<span class="name">p</span>&gt;</span>标签，定位到p1*/</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-child(2)</span>&#123;         <span class="comment">/*释义：找到&lt;P&gt;元素的父级元素的所有子元素，按照顺序数第2个子元素*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">blue</span>;        <span class="comment">/*nth-child是按照顺序来的*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="xml">        /*要求：选中<span class="tag">&lt;<span class="name">body</span>&gt;</span>下面的第一个<span class="tag">&lt;<span class="name">p</span>&gt;</span>标签，定位到p1*/</span></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(1)</span>&#123;  <span class="comment">/*释义：找到&lt;P&gt;元素的父级元素的同类型所有子元素&lt;P&gt;，按照顺序数第1个子元素*/</span></span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-tag">yellow</span>; <span class="comment">/*nth-of-type是按照同类型的顺序的来的*/</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>h2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>p3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>li3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-4、属性选择器"><a href="#2-4、属性选择器" class="headerlink" title="2.4、属性选择器"></a>2.4、属性选择器</h3><p><strong>相当于ID选择器+class选择器的结合(配合正则表达式食用，效果更佳哦！)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        a&#123;</span><br><span class="line">            height: 50px;</span><br><span class="line">            width: 50px;</span><br><span class="line">            border-radius: 10px;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#000000</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">            text-align: center;</span><br><span class="line">            font-weight: bold ;</span><br><span class="line">            line-height: 50px;</span><br><span class="line">            display: block;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">            margin-right: 5px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /*</span><br><span class="line"></span><br><span class="line">        =    表示：绝对等于</span><br><span class="line">        *=   表示：包含这个元素</span><br><span class="line">        ^=   表示：以这个元素开头</span><br><span class="line">        $=   表示：以这个元素结尾</span><br><span class="line"></span><br><span class="line">        语法规则：选择到的元素 [属性过滤]&#123;声明1;声明2;声明3;&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">a</span><span class="selector-attr">[class$=bbb]</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-tag">red</span>;   释义：通过标签选择器 选择所有的<span class="selector-tag">a</span>标签 ，<span class="selector-attr">[class$=bbb]</span>表示<span class="selector-tag">class</span>属性中以<span class="selector-tag">bbb</span>结尾的<span class="selector-tag">a</span>标签</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        a[href*=&quot;css/1.jpg&quot;]&#123;   释义：通过标签选择器 选择所有的a标签 ，[href*=&quot;css/1.jpg&quot;]表示href属性中包含css/1.jpg的a标签</span><br><span class="line">            background-color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        */</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.huawei.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb xxx&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb xxx&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb xxx&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb xxx&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bbb xxx&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;bbb xxx&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;css/1.doc&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aaa bbb xxx&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3、相关的属性"><a href="#3、相关的属性" class="headerlink" title="3、相关的属性"></a>3、相关的属性</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text-align</span>:文本对齐方式   <span class="selector-tag">center</span>居中、<span class="selector-tag">right</span>右边、<span class="selector-tag">left</span>左边</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">text-indent</span>:首行缩进  单位推荐<span class="selector-tag">em</span>一般2<span class="selector-tag">em</span>就行</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">line-height</span>:行高这个行高指该元素的高度，如果行高等于盒子高度，则居中！</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">text-decoration</span>：下划线  <span class="selector-tag">none</span>无、<span class="selector-tag">underline</span>有、<span class="selector-tag">line-through</span>删除线、<span class="selector-tag">overline</span>上划线</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">text-shadow</span>:阴影 相关参数：1、阴影颜色 2、水平偏移 3、垂直偏移 4、阴影半径</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4、伪类链接"><a href="#4、伪类链接" class="headerlink" title="4、伪类链接"></a>4、伪类链接</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;<span class="attribute">color</span>:<span class="number">#FF0000</span>;&#125; <span class="comment">/* 未访问的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;<span class="attribute">color</span>:<span class="number">#00FF00</span>;&#125; <span class="comment">/* 已访问的链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">color</span>:<span class="number">#FF00FF</span>;&#125; <span class="comment">/* 鼠标划过链接 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;<span class="attribute">color</span>:<span class="number">#0000FF</span>;&#125; <span class="comment">/* 已选中的链接 */</span></span><br></pre></td></tr></table></figure><h1 id="5、列表"><a href="#5、列表" class="headerlink" title="5、列表"></a>5、列表</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">list-style:</span></span><br><span class="line"><span class="comment">none去掉圆点</span></span><br><span class="line"><span class="comment">decimal数字</span></span><br><span class="line"><span class="comment">circle空心圆</span></span><br><span class="line"><span class="comment">square正方行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6、背景图片"><a href="#6、背景图片" class="headerlink" title="6、背景图片"></a>6、背景图片</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">bgckground-image</span>:<span class="built_in">url</span>(<span class="string">&quot;images/1.jpg&quot;</span>);</span><br><span class="line">    bgckground-repeat：no-repeat;</span><br><span class="line">    <span class="selector-tag">bgckground-position</span><span class="selector-pseudo">:20px</span> 30<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">背景图片默认是铺满整个屏幕的，我们需要添加 </span></span><br><span class="line"><span class="comment">bgckground-repeat：no-repeat  取消平铺</span></span><br><span class="line"><span class="comment">改变图片的位置，我们需要添加</span></span><br><span class="line"><span class="comment">bgckground-position:参数1(以左上角原点为中心，</span></span><br><span class="line"><span class="comment">左右（x轴）的偏移量) 参数2(以左上角原点为中心，上下（y轴）的偏移量)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">简写：</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">        <span class="comment">/*颜色、图片地址 图片的位置 平铺方式*/</span></span><br><span class="line">    <span class="attribute">bgckground</span>:blue <span class="built_in">url</span>(<span class="string">&quot;images/1.jpg&quot;</span>) <span class="number">20px</span> <span class="number">30px</span> no-repeat;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="7、display"><a href="#7、display" class="headerlink" title="7、display"></a>7、display</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">display的相关属性值：</span></span><br><span class="line"><span class="comment">none---》隐藏该元素</span></span><br><span class="line"><span class="comment">block---》将该元素变为块元素</span></span><br><span class="line"><span class="comment">inline---》将该元素变为行内元素</span></span><br><span class="line"><span class="comment">inline-block---》块元素和行内元素的结合，是块元素，也可以在一行！</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h1 id="8、浮动-float"><a href="#8、浮动-float" class="headerlink" title="8、浮动(float)"></a>8、浮动(float)</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">float</span>:left;<span class="comment">/*向左浮动 */</span></span><br><span class="line">    <span class="attribute">float</span>:right;<span class="comment">/* 向右浮动 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9、父级边框塌陷问题"><a href="#9、父级边框塌陷问题" class="headerlink" title="9、父级边框塌陷问题"></a>9、父级边框塌陷问题</h1><p><strong>由于浮动后，内容脱离标准文档流。会造成父级边框塌陷！</strong></p><p><font color=red><strong>4种解决方案：</strong></font></p><p><font color=blue><strong>1、增加父级边框的高度</strong></font></p><p><font color=blue><strong>2、在漂浮的元素后面增加一个空的  div ，并清除该 div 的左右浮动！</strong></font></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>:both</span><br><span class="line">    margin:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">clear的相关属性值：</span></span><br><span class="line"><span class="comment">clear：right;右侧不允许有浮动元素</span></span><br><span class="line"><span class="comment">    clear：left;左侧不允许有浮动元素</span></span><br><span class="line"><span class="comment">    clear：both;两侧不允许有浮动元素</span></span><br><span class="line"><span class="comment">    clear：none;</span></span><br></pre></td></tr></table></figure><p><font color=blue><strong>3、overflow</strong></font></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">在浮动元素的父级中添加overflow：hidden属性。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&lt;div id=&quot;father&quot;&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span>&gt; <span class="selector-tag">div1</span> &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt; <span class="selector-tag">div2</span> &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span>&gt; <span class="selector-tag">div3</span> &lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">div</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#father</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>:hidden自动隐藏</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">overflow的相关属性，</span></span><br><span class="line"><span class="comment">overflow：hidden  内容超出部分自动隐藏</span></span><br><span class="line"><span class="comment">overflow：scroll  内容超出部分以滚动条出现并查看</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><font color=blue><strong>4、父类元素添加一个伪类：after,并添加以下相关属性</strong></font></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#father</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">    display:block</span><br><span class="line">    clear:both</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>对比display和float</strong></p><p><strong>display：让内容排成一排，缺点：放置的方向不可控。</strong></p><p><strong>float：让内容排成一排，缺点：要解决父级边框塌陷的问题，推荐第4种解决方案。</strong></p><h1 id="10-、定位"><a href="#10-、定位" class="headerlink" title="10 、定位"></a>10 、定位</h1><h3 id="10-1、相对定位"><a href="#10-1、相对定位" class="headerlink" title="10.1、相对定位"></a>10.1、相对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*相对定位：*/</span> <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br></pre></td></tr></table></figure><p><strong><font color=red>相对于自身的位置，进行偏移</font>。相对定位的话，它并<font color=red>没有脱离</font>标准文档流，所以<font color=red>原来的位置会被保留！</font></strong></p><h3 id="10-2、绝对定位"><a href="#10-2、绝对定位" class="headerlink" title="10.2、绝对定位"></a>10.2、绝对定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*绝对定位*/</span><span class="selector-tag">position</span>: <span class="selector-tag">absolute</span>;</span><br></pre></td></tr></table></figure><p><strong><font color=red>相对于父级元素或浏览器的位置，进行偏移</font>。绝对定位的话，它<font color=red>脱离了标准文档流</font>，所以<font color=red>原来的位置不会被保留！</font></strong></p><p><font color=blue><strong>注意点：</strong></font></p><p><font color=blue><strong>1、父级元素没有使用定位的话，是相对于浏览器位置进行偏移的！</strong></font></p><p><font color=blue><strong>2、父级元素存在定位的话，是相对于父级元素的位置进行偏移的！</strong></font></p><hr><h3 id="10-3、固定定位"><a href="#10-3、固定定位" class="headerlink" title="10.3、固定定位"></a>10.3、固定定位</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*固定定位：*/</span><span class="selector-tag">position</span>: <span class="selector-tag">fixed</span>;</span><br></pre></td></tr></table></figure><h3 id="10-4、Z-index"><a href="#10-4、Z-index" class="headerlink" title="10.4、Z-index"></a>10.4、Z-index</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">z-index</span>: 22;<span class="comment">/*可以用来提升定位后，重叠元素的层级！*/</span></span><br></pre></td></tr></table></figure><h3 id="10-5、背景透明度属性"><a href="#10-5、背景透明度属性" class="headerlink" title="10.5、背景透明度属性"></a>10.5、背景透明度属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*背景透明度*/</span><span class="selector-tag">opacity</span><span class="selector-pseudo">:0.5</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git笔记</title>
      <link href="posts/5bd9b965/"/>
      <url>posts/5bd9b965/</url>
      
        <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p><strong><a href="https://www.cnblogs.com/miracle77hp/articles/11163532.html">https://www.cnblogs.com/miracle77hp/articles/11163532.html</a></strong></p><p><strong>感谢博主！</strong></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Git下载：<a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></p><h2 id="Linux-平台上安装"><a href="#Linux-平台上安装" class="headerlink" title="Linux 平台上安装"></a><font color=blue>Linux 平台上安装</font></h2><p>Git 的工作需要调用 curl，zlib，openssl，expat，libiconv 等库的代码，所以需要先安装这些依赖工具。</p><p>在有 yum 的系统上（比如 Fedora）或者有 apt-get 的系统上（比如 Debian 体系），可以用下面的命令安装：</p><p>各 Linux 系统可以使用其安装包管理工具（apt-get、yum 等）进行安装：</p><h3 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian/Ubuntu"></a>Debian/Ubuntu</h3><p>Debian/Ubuntu Git 安装命令为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \</span></span><br><span class="line"><span class="bash">  libz-dev libssl-dev</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-get install git</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br><span class="line">git version 1.8.1.2</span><br></pre></td></tr></table></figure><h3 id="Centos-RedHat"><a href="#Centos-RedHat" class="headerlink" title="Centos/RedHat"></a>Centos/RedHat</h3><p>如果你使用的系统是 Centos/RedHat 安装命令为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> yum install curl-devel expat-devel gettext-devel \</span></span><br><span class="line"><span class="bash">  openssl-devel zlib-devel</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install git-core</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> git --version</span></span><br><span class="line">git version 1.7.1</span><br></pre></td></tr></table></figure><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>我们也可以在官网下载源码包来安装，最新源码包下载地址：<a href="https://git-scm.com/download">https://git-scm.com/download</a></p><p>安装指定系统的依赖包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### Centos/RedHat ##########</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum install curl-devel expat-devel gettext-devel \</span></span><br><span class="line"><span class="bash">  openssl-devel zlib-devel</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">######### Debian/Ubuntu ##########</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \</span></span><br><span class="line"><span class="bash">  libz-dev libssl-dev</span></span><br></pre></td></tr></table></figure><p>解压安装下载的源码包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxf git-1.7.2.2.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> git-1.7.2.2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make prefix=/usr/<span class="built_in">local</span> all</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo make prefix=/usr/<span class="built_in">local</span> install</span></span><br></pre></td></tr></table></figure><h2 id="Windows-平台上安装"><a href="#Windows-平台上安装" class="headerlink" title="Windows 平台上安装"></a><font color=blue>Windows 平台上安装</font></h2><p><strong>直接一路next ！</strong></p><h1 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><h5 id="查看不同级别的配置文件"><a href="#查看不同级别的配置文件" class="headerlink" title="查看不同级别的配置文件"></a>查看不同级别的配置文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看系统配置</span></span><br><span class="line">git config --system --list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看用户配置</span></span><br><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><h5 id="Git相关配置文件的位置"><a href="#Git相关配置文件的位置" class="headerlink" title="Git相关配置文件的位置"></a>Git相关配置文件的位置</h5><p>1）、Git\etc\gitconfig    :     Git安装目录下的 gitconfig    –system     系统级</p><p>2）、C：Users\Administrator\ .gitconfig     ：c盘用户目录下     –global     用户当前的配置</p><h5 id="配置个人的用户名称和电子邮件地址"><a href="#配置个人的用户名称和电子邮件地址" class="headerlink" title="配置个人的用户名称和电子邮件地址"></a>配置个人的用户名称和电子邮件地址</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name Heary</span><br><span class="line">git config --global user.email 1612893803@qq.com</span><br></pre></td></tr></table></figure><p>如果用了 <strong>–global</strong> 选项，那么更改的配置文件就是位于你用户主目录下的那个，以后你所有的项目都会默认使用这里配置的用户信息。</p><h1 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h1><p><img src= "/img/loading.gif" data-lazy-src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015120901.png" alt="img"></p><ul><li>Workspace：工作区</li><li>Index / Stage：暂存区</li><li>Repository：仓库区（或本地仓库）</li><li>Remote：远程仓库</li></ul><p><strong>工作区：</strong></p><p>工作区就是你存放代码的地方，新建一个文件夹就是一个工作区。</p><p><strong>本地仓库：</strong></p><p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/image-20200714170916551.png"></p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区。</p><p><img src= "/img/loading.gif" data-lazy-src="https://www.liaoxuefeng.com/files/attachments/919020037470528/0" alt="git-repo"></p><p>文件往Git版本库里添加的时候，是分两步执行的：</p><p>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。</p><p>简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p><strong>远程仓库：</strong></p><p>简单理解就是在线版的本地仓库。</p><h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><p>分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，另一个你正在另一个平行宇宙里努力学习SVN。</p><p>如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！</p><p><img src= "/img/loading.gif" data-lazy-src="https://www.liaoxuefeng.com/files/attachments/919021987875136/0" alt="learn-branches"></p><p>分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，第一周你写了50%的代码，如果立刻提交，由于代码还没写完，不完整的代码库会导致别人不能干活了。如果等代码全部写完再一次提交，又存在丢失每天进度的巨大风险。</p><p>现在有了分支，就不用怕了。你创建了一个属于你自己的分支，别人看不到，还继续在原来的分支上正常工作，而你在自己的分支上干活，想提交就提交，直到开发完毕后，再一次性合并到原来的分支上，这样，既安全，又不影响别人工作。</p><p>其他版本控制系统如SVN等都有分支管理，但是用过之后你会发现，这些版本控制系统创建和切换分支比蜗牛还慢，简直让人无法忍受，结果分支功能成了摆设，大家都不去用。</p><p>但Git的分支是与众不同的，无论创建、切换和删除分支，Git在1秒钟之内就能完成！无论你的版本库是1个文件还是1万个文件。</p><h1 id="Git-分支管理"><a href="#Git-分支管理" class="headerlink" title="Git 分支管理"></a>Git 分支管理</h1><p>几乎每一种版本控制系统都以某种形式支持分支。使用分支意味着你可以从开发主线上分离开来，然后在不影响主线的同时继续工作。</p><p>有人把 Git 的分支模型称为<strong>必杀技特性</strong>，而正是因为它，将 <strong>Git</strong> 从版本控制系统家族里区分出来。</p><p>创建分支命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch (branchname)</span><br></pre></td></tr></table></figure><p>切换分支命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout (branchname)</span><br></pre></td></tr></table></figure><p>当你切换分支的时候，Git 会用该分支的最后提交的快照替换你的工作目录的内容， 所以多个分支不需要多个目录。</p><p>合并分支命令:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge </span><br></pre></td></tr></table></figure><p>你可以多次合并到统一分支， 也可以选择在合并之后直接删除被并入的分支。</p><p>开始前我们先创建一个测试目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir gitdemo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> gitdemo/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init</span></span><br><span class="line">Initialized empty Git repository...</span><br><span class="line"><span class="meta">$</span><span class="bash"> touch README</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add README</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">&#x27;第一次版本提交&#x27;</span></span></span><br><span class="line">[master (root-commit) 3b58100] 第一次版本提交</span><br><span class="line"> 1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"> create mode 100644 README</span><br></pre></td></tr></table></figure><hr><h2 id="Git-分支管理-1"><a href="#Git-分支管理-1" class="headerlink" title="Git 分支管理"></a>Git 分支管理</h2><h3 id="列出分支"><a href="#列出分支" class="headerlink" title="列出分支"></a>列出分支</h3><p>列出分支基本命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>没有参数时，<strong>git branch</strong> 会列出你在本地的分支。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br></pre></td></tr></table></figure><p>此例的意思就是，我们有一个叫做 <strong>master</strong> 的分支，并且该分支是当前分支。</p><p>当你执行 <strong>git init</strong> 的时候，默认情况下 Git 就会为你创建 <strong>master</strong> 分支。</p><p>如果我们要手动创建一个分支。执行 <strong>git branch (branchname)</strong> 即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch testing</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br><span class="line">  testing</span><br></pre></td></tr></table></figure><p>现在我们可以看到，有了一个新分支 <strong>testing</strong>。</p><p>当你以此方式在上次提交更新之后创建了新分支，如果后来又有更新提交， 然后又切换到了 <strong>testing</strong> 分支，Git 将还原你的工作目录到你创建分支时候的样子。</p><p>接下来我们将演示如何切换分支，我们用 git checkout (branch) 切换到我们要修改的分支。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&#x27;runoob.com&#x27;</span> &gt; test.txt</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add .</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -m <span class="string">&#x27;add test.txt&#x27;</span></span></span><br><span class="line">[master 3e92c19] add test.txt</span><br><span class="line"> 1 file changed, 1 insertion(+)</span><br><span class="line"> create mode 100644 test.txt</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        test.txt</span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout testing</span></span><br><span class="line">Switched to branch &#x27;testing&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README</span><br></pre></td></tr></table></figure><p>当我们切换到 <strong>testing</strong> 分支的时候，我们添加的新文件 test.txt 被移除了。切换回 <strong>master</strong> 分支的时候，它们有重新出现了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout master</span></span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        test.txt</span><br></pre></td></tr></table></figure><p>我们也可以使用 git checkout -b (branchname) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b newtest</span></span><br><span class="line">Switched to a new branch &#x27;newtest&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> git rm test.txt</span> </span><br><span class="line">rm &#x27;test.txt&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README</span><br><span class="line"><span class="meta">$</span><span class="bash"> touch runoob.php</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git add .</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -am <span class="string">&#x27;removed test.txt、add runoob.php&#x27;</span></span></span><br><span class="line">[newtest c1501a2] removed test.txt、add runoob.php</span><br><span class="line"> 2 files changed, 1 deletion(-)</span><br><span class="line"> create mode 100644 runoob.php</span><br><span class="line"> delete mode 100644 test.txt</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        runoob.php</span><br><span class="line"><span class="meta">$</span><span class="bash"> git checkout master</span></span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        test.txt</span><br></pre></td></tr></table></figure><p>如你所见，我们创建了一个分支，在该分支的上移除了一些文件 test.txt，并添加了 runoob.php 文件，然后切换回我们的主分支，删除的 test.txt 文件又回来了，且新增加的 runoob.php 不存在主分支中。</p><p>使用分支将工作切分开来，从而让我们能够在不同开发环境中做事，并来回切换。</p><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><p>删除分支命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d (branchname)</span><br></pre></td></tr></table></figure><p>例如我们要删除 testing 分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br><span class="line">  testing</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch -d testing</span></span><br><span class="line">Deleted branch testing (was 85fc7e7).</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br></pre></td></tr></table></figure><h3 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h3><p>一旦某分支有了独立内容，你终究会希望将它合并回到你的主分支。 你可以使用以下命令将任何分支合并到当前分支中去：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git merge</span><br><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br><span class="line">  newtest</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        test.txt</span><br><span class="line"><span class="meta">$</span><span class="bash"> git merge newtest</span></span><br><span class="line">Updating 3e92c19..c1501a2</span><br><span class="line">Fast-forward</span><br><span class="line"> runoob.php | 0</span><br><span class="line"> test.txt   | 1 -</span><br><span class="line"> 2 files changed, 1 deletion(-)</span><br><span class="line"> create mode 100644 runoob.php</span><br><span class="line"> delete mode 100644 test.txt</span><br><span class="line"><span class="meta">$</span><span class="bash"> ls</span></span><br><span class="line">README        runoob.php</span><br></pre></td></tr></table></figure><p>以上实例中我们将 newtest 分支合并到主分支去，test.txt 文件被删除。</p><p>合并完后就可以删除分支:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch -d newtest</span></span><br><span class="line">Deleted branch newtest (was c1501a2).</span><br></pre></td></tr></table></figure><p>删除后， 就只剩下 master 分支了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br></pre></td></tr></table></figure><h3 id="合并冲突"><a href="#合并冲突" class="headerlink" title="合并冲突"></a>合并冲突</h3><p>合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git branch</span></span><br><span class="line">* master</span><br><span class="line"><span class="meta">$</span><span class="bash"> cat runoob.php</span></span><br></pre></td></tr></table></figure><p>首先，我们创建一个叫做 change_site 的分支，切换过去，我们将 runoob.php 内容改为:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo &#x27;runoob&#x27;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>创建 change_site 分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout -b change_site</span></span><br><span class="line">Switched to a new branch &#x27;change_site&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> vim runoob.php</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> head -3 runoob.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">echo &#x27;runoob&#x27;;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -am <span class="string">&#x27;changed the runoob.php&#x27;</span></span></span><br><span class="line">[change_site 7774248] changed the runoob.php</span><br><span class="line"> 1 file changed, 3 insertions(+)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>将修改的内容提交到 change_site 分支中。 现在，假如切换回 master 分支我们可以看内容恢复到我们修改前的(空文件，没有代码)，我们再次修改 runoob.php 文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git checkout master</span></span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br><span class="line"><span class="meta">$</span><span class="bash"> cat runoob.php</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim runoob.php    <span class="comment"># 修改内容如下</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat runoob.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">echo 1;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff</span></span><br><span class="line">diff --git a/runoob.php b/runoob.php</span><br><span class="line">index e69de29..ac60739 100644</span><br><span class="line">--- a/runoob.php</span><br><span class="line">+++ b/runoob.php</span><br><span class="line">@@ -0,0 +1,3 @@</span><br><span class="line">+&lt;?php</span><br><span class="line">+echo 1;</span><br><span class="line">+?&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit -am <span class="string">&#x27;修改代码&#x27;</span></span></span><br><span class="line">[master c68142b] 修改代码</span><br><span class="line"> 1 file changed, 3 insertions(+)</span><br></pre></td></tr></table></figure><p>现在这些改变已经记录到我的 “master” 分支了。接下来我们将 “change_site” 分支合并过来。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git merge change_site</span></span><br><span class="line">Auto-merging runoob.php</span><br><span class="line">CONFLICT (content): Merge conflict in runoob.php</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> cat runoob.php     <span class="comment"># 代开文件，看到冲突内容</span></span></span><br><span class="line">&lt;?php</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">echo 1;</span><br><span class="line">=======</span><br><span class="line">echo &#x27;runoob&#x27;;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt;&gt;&gt;&gt;&gt; change_site</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>我们将前一个分支合并到 master 分支，一个合并冲突就出现了，接下来我们需要手动去修改它。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim runoob.php</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> cat runoob.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">echo 1;</span><br><span class="line">echo &#x27;runoob&#x27;;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> git diff</span></span><br><span class="line">diff --cc runoob.php</span><br><span class="line">index ac60739,b63d7d7..0000000</span><br><span class="line">--- a/runoob.php</span><br><span class="line">+++ b/runoob.php</span><br><span class="line">@@@ -1,3 -1,3 +1,4 @@@</span><br><span class="line">  &lt;?php</span><br><span class="line"> +echo 1;</span><br><span class="line">+ echo &#x27;runoob&#x27;;</span><br><span class="line">  ?&gt;</span><br></pre></td></tr></table></figure><p>在 Git 中，我们可以用 git add 要告诉 Git 文件冲突已经解决</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git status -s</span></span><br><span class="line">UU runoob.php</span><br><span class="line"><span class="meta">$</span><span class="bash"> git add runoob.php</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git status -s</span></span><br><span class="line">M  runoob.php</span><br><span class="line"><span class="meta">$</span><span class="bash"> git commit</span></span><br><span class="line">[master 88afe0e] Merge branch &#x27;change_site&#x27;</span><br></pre></td></tr></table></figure><p>现在我们成功解决了合并中的冲突，并提交了结果</p><h1 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h1><h5 id="Git-标签"><a href="#Git-标签" class="headerlink" title="Git 标签"></a>Git 标签</h5><p>如果你达到一个重要的阶段，并希望永远记住那个特别的提交快照，你可以使用 git tag 给它打上标签。</p><p>比如说，我们想为我们的 runoob 项目发布一个”1.0”版本。 我们可以用 git tag -a v1.0 命令给最新一次提交打上（HEAD）”v1.0”的标签。</p><p>-a 选项意为”创建一个带注解的标签”。 不用 -a 选项也可以执行的，但它不会记录这标签是啥时候打的，谁打的，也不会让你添加个标签的注解。 我推荐一直创建带注解的标签。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git tag -a v1.0 </span><br></pre></td></tr></table></figure><p>当你执行 git tag -a 命令时，Git 会打开你的编辑器，让你写一句标签注解，就像你给提交写注解一样。</p><p>现在，注意当我们执行 git log –decorate 时，我们可以看到我们的标签了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*   d5e9fc2 (HEAD -&gt; master) Merge branch &#x27;change_site&#x27;</span><br><span class="line">|\  </span><br><span class="line">| * 7774248 (change_site) changed the runoob.php</span><br><span class="line">* | c68142b 修改代码</span><br><span class="line">|/  </span><br><span class="line">* c1501a2 removed test.txt、add runoob.php</span><br><span class="line">* 3e92c19 add test.txt</span><br><span class="line">* 3b58100 第一次版本提交</span><br></pre></td></tr></table></figure><p>如果我们忘了给某个提交打标签，又将它发布了，我们可以给它追加标签。</p><p>例如，假设我们发布了提交 85fc7e7(上面实例最后一行)，但是那时候忘了给它打标签。 我们现在也可以：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git tag -a v0.9 85fc7e7</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">log</span> --oneline --decorate --graph</span></span><br><span class="line">*   d5e9fc2 (HEAD -&gt; master) Merge branch &#x27;change_site&#x27;</span><br><span class="line">|\  </span><br><span class="line">| * 7774248 (change_site) changed the runoob.php</span><br><span class="line">* | c68142b 修改代码</span><br><span class="line">|/  </span><br><span class="line">* c1501a2 removed test.txt、add runoob.php</span><br><span class="line">* 3e92c19 add test.txt</span><br><span class="line">* 3b58100 (tag: v0.9) 第一次版本提交</span><br></pre></td></tr></table></figure><p>如果我们要查看所有标签可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git tag</span></span><br><span class="line">v0.9</span><br><span class="line">v1.0</span><br></pre></td></tr></table></figure><p>指定标签信息命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -a &lt;tagname&gt; -m &quot;runoob.com标签&quot;</span><br></pre></td></tr></table></figure><p>PGP签名标签命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git tag -s &lt;tagname&gt; -m &quot;runoob.com标签&quot;</span><br></pre></td></tr></table></figure><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p><strong>根据<a href="https://www.cnblogs.com/miracle77hp/articles/11163532.html%E7%9A%84%E6%95%B4%E7%90%86%E3%80%82">https://www.cnblogs.com/miracle77hp/articles/11163532.html的整理。</a></strong></p><h5 id="1、新建仓库"><a href="#1、新建仓库" class="headerlink" title="1、新建仓库"></a>1、新建仓库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库 </span></span><br><span class="line">$ git init</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库 </span></span><br><span class="line">$ git init [project-name]</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史 </span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure><h5 id="2、增加、删除文件"><a href="#2、增加、删除文件" class="headerlink" title="2、增加、删除文件"></a>2、增加、删除文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 添加指定文件到暂存区 </span></span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">$ git add [dir]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区 </span></span><br><span class="line">$ git add .</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认 </span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交 </span></span><br><span class="line">$ git add -p</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">$ git rm [file1] [file2] ...</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区 </span></span><br><span class="line">$ git rm --cached [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区 </span></span><br><span class="line">$ git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure><h5 id="3、代码提交"><a href="#3、代码提交" class="headerlink" title="3、代码提交"></a>3、代码提交</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区 </span></span><br><span class="line">$ git commit -m [message]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区 </span></span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">$ git commit -a</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交时显示所有diff信息 </span></span><br><span class="line">$ git commit -v</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息 </span></span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化 </span></span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h5 id="4、分支"><a href="#4、分支" class="headerlink" title="4、分支"></a>4、分支</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支 </span></span><br><span class="line">$ git branch</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出所有远程分支 </span></span><br><span class="line">$ git branch -r</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支 </span></span><br><span class="line">$ git branch -a</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支 </span></span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支 </span></span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line"> </span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区 </span></span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 切换到上一个分支 </span></span><br><span class="line">$ git checkout -</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间 </span></span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 合并指定分支到当前分支 </span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支 </span></span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除远程分支 </span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line"></span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure><h5 id="5、标签"><a href="#5、标签" class="headerlink" title="5、标签"></a>5、标签</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag </span></span><br><span class="line">$ git tag</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个tag在当前commit </span></span><br><span class="line">$ git tag [tag]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个tag在指定commit </span></span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除本地tag </span></span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [tag]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交指定tag </span></span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交所有tag </span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag </span></span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure><h5 id="6、查看信息"><a href="#6、查看信息" class="headerlink" title="6、查看信息"></a>6、查看信息</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件 </span></span><br><span class="line">$ git status</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件 </span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词 </span></span><br><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行 </span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件 </span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --grep feature</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名 </span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file]</span><br><span class="line"> </span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff </span></span><br><span class="line">$ git <span class="built_in">log</span> -p [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序 </span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过 </span></span><br><span class="line">$ git blame [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示两次提交之间的差异 </span></span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码 </span></span><br><span class="line">$ git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件 </span></span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交 </span></span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure><h5 id="7、远程同步"><a href="#7、远程同步" class="headerlink" title="7、远程同步"></a>7、远程同步</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git fetch [remote]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示所有远程仓库 </span></span><br><span class="line">$ git remote -v</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息 </span></span><br><span class="line">$ git remote show [remote]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并 </span></span><br><span class="line">$ git pull [remote] [branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push [remote] --force</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库 </span></span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure><h5 id="8、撤销"><a href="#8、撤销" class="headerlink" title="8、撤销"></a>8、撤销</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区 </span></span><br><span class="line">$ git checkout [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区 </span></span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区 </span></span><br><span class="line">$ git checkout .</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">$ git reset [file]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">$ git reset --hard</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">$ git reset [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit </span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line"> </span><br><span class="line">$ git revert [commit]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入 </span></span><br><span class="line">$ git stash</span><br><span class="line"> </span><br><span class="line">$ git stash pop</span><br></pre></td></tr></table></figure><h5 id="9、其他"><a href="#9、其他" class="headerlink" title="9、其他"></a>9、其他</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成一个可供发布的压缩包 </span></span><br><span class="line">$ git archive</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch笔记</title>
      <link href="posts/f14ce4db/"/>
      <url>posts/f14ce4db/</url>
      
        <content type="html"><![CDATA[<p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173335.png" alt="elastic-logo"></p><h1 id="一、ElasticSearch介绍"><a href="#一、ElasticSearch介绍" class="headerlink" title="一、ElasticSearch介绍"></a>一、ElasticSearch介绍</h1><h3 id="1-1-引言"><a href="#1-1-引言" class="headerlink" title="1.1 引言"></a>1.1 引言</h3><blockquote><p>1、在海量数据中执行搜素功能时，如果使用MySql，效率太低。</p><p>2、关键字输入的不准确，一样可以搜索到想要的数据</p><p>3、将搜索关键字，以红色的字体展示</p></blockquote><h3 id="1-2-ES的介绍"><a href="#1-2-ES的介绍" class="headerlink" title="1.2 ES的介绍"></a>1.2 ES的介绍</h3><blockquote><p>ES 是一个使用Java语言并且基于Lucene编写的搜索引擎框架，它提供了分布式的全文搜索功能，提供了一个统一的基于RESTful风格的WEB接口，官方客户端也对多种语言都提供了相应的API。</p><p>Lucene : Lucene 本身就是一个搜索引擎的 底层。</p><p>分布式 ： ES主要为了突出它的横向扩展能力。</p><p>全文检索： 将一段词语进行分词，并且将分出来的单个词语统一放到 一个分词库中，在搜索时，根据关键字去分词库中检索，找到匹配的内容。(倒排索引)</p><p>RESTful风格的WEB接口：只需要发送一个http请求，并且根据请求方式不同，携带的参数不同，执行相应的功能。</p></blockquote><h3 id="1-3-ES的由来"><a href="#1-3-ES的由来" class="headerlink" title="1.3 ES的由来"></a>1.3 ES的由来</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173419.png" alt="image-20200724172118585"></p><h3 id="1-4-ES和Solr的区别"><a href="#1-4-ES和Solr的区别" class="headerlink" title="1.4 ES和Solr的区别"></a>1.4 ES和Solr的区别</h3><blockquote><p>1、Solr在查询死数据时，速度相对于ES会更快。但是数据时实时变化的，查询效率会下降很多，ES的查      询效率变化并不大</p><p>2、Solr搭建集群需要依赖ZooKeeper来帮助管理，ES本身支持集群搭建，不需要第三方。</p><p>3、ES对云计算和大数据支持非常好。</p><p>4、ES的文档很健全</p></blockquote><h3 id="1-5-倒排索引"><a href="#1-5-倒排索引" class="headerlink" title="1.5 倒排索引"></a>1.5 倒排索引</h3><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173500.png" alt="image-20200807125012845"></p><blockquote><p>将存放的数据，以一定方式进行分词，并将分词的内容存放到一个单独的分词库中</p><p>当用户去查询数据时，会将用户查询的关键词进行分词</p><p>然后去分词库中匹配内容，最终得到数据的id标识</p><p>根据id标识去存放数据的位置拉取指定的内容</p></blockquote><h1 id="二、ElaticSearch安装"><a href="#二、ElaticSearch安装" class="headerlink" title="二、ElaticSearch安装"></a>二、ElaticSearch安装</h1><h3 id="2-1-、安装ES-amp-Kibana"><a href="#2-1-、安装ES-amp-Kibana" class="headerlink" title="2.1 、安装ES &amp; Kibana"></a>2.1 、安装ES &amp; Kibana</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">version:&quot;3.1&quot;</span><br><span class="line">services:</span><br><span class="line">elasticsearch:</span><br><span class="line">image: daocloud.io/library/elasticsearch:6.5.4</span><br><span class="line">restart: always</span><br><span class="line">container_name: elasticsearch</span><br><span class="line">ports:</span><br><span class="line">- 9200: 9200</span><br><span class="line">kibana:</span><br><span class="line">image: daocloud.io/library/kibana:6.5.4</span><br><span class="line">restart: always</span><br><span class="line">container_name: kibana</span><br><span class="line">ports:</span><br><span class="line">-5601: 5601</span><br><span class="line">environment:</span><br><span class="line">- elasticsearch_url=http://47.115.11.82:9200</span><br><span class="line">depends_on:</span><br><span class="line">- elasticsearch</span><br></pre></td></tr></table></figure><h3 id="2-2-、安装-IK-分词器"><a href="#2-2-、安装-IK-分词器" class="headerlink" title="2.2 、安装 IK 分词器"></a>2.2 、安装 IK 分词器</h3><blockquote><p>下载 IK 分词器的地址：</p><p>进入到ES容器内部，跳转到bin目录下，执行bin目录下的脚本文件：</p><p>./elasticsearch-plugin install </p><p>IK提供了两个分词算法：ik_smart和ik_word，其中ik_smart为最少切分，ik_word为最细粒度划分。</p></blockquote><h1 id="三、ElasticSearch基本操作"><a href="#三、ElasticSearch基本操作" class="headerlink" title="三、ElasticSearch基本操作"></a>三、ElasticSearch基本操作</h1><h3 id="3-1、ES的结构"><a href="#3-1、ES的结构" class="headerlink" title="3.1、ES的结构"></a>3.1、ES的结构</h3><h5 id="3-1-1-、索引Index、分片和备份。"><a href="#3-1-1-、索引Index、分片和备份。" class="headerlink" title="3.1.1 、索引Index、分片和备份。"></a>3.1.1 、索引Index、分片和备份。</h5><blockquote><p>ES 的服务中，可以创建多个索引。类似Mysql的多个数据库</p><p>每一个索引默认被分成5片存储。</p><p>每一个分片都会存在至少一个备份分片。</p><p>备份分片默认不会帮助检索数据，当ES检索压力特别大的时候，备份分片才会帮助检索数据。</p><p>备份分片必须放在不同的服务器中。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173546.png" alt="image-20200807151543708"></p><h5 id="3-1-2-、类型Type"><a href="#3-1-2-、类型Type" class="headerlink" title="3.1.2 、类型Type"></a>3.1.2 、类型Type</h5><blockquote><p>一个索引下，可以创建多个类型。类似Mysql中不同的表</p><p>Ps:根据版本的不同，类型可创建的数量也不同</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173702.png" alt="image-20200807151731292"></p><h5 id="3-1-3-、文档Doc"><a href="#3-1-3-、文档Doc" class="headerlink" title="3.1.3 、文档Doc"></a>3.1.3 、文档Doc</h5><blockquote><p>一个类型下有多个文档。这个文档类似于Mysql中的多行数据。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173754.png" alt="image-20200807152002952"></p><h3 id="3-2-、操作ES的Restful语法"><a href="#3-2-、操作ES的Restful语法" class="headerlink" title="3.2 、操作ES的Restful语法"></a>3.2 、操作ES的Restful语法</h3><blockquote><p>GET请求:</p><pre><code>http://ip:port/index:查询索引信息http://ip:port/index/type/doc_id:查询指定的文档信息</code></pre><p>POST请求:</p><pre><code>http://ip:port/index/type/_search:查询文档，可以在请求体中添加json字符串来代表查询条件http://ip:port/index/type/doc_id/_update:修改文档，在请求体中指定ison字符串代表修改的具体信息_</code></pre><p>PUT请求:</p><pre><code>http://ip;port/index:创建一个索引，需要在请求体中指定索引的信息，类型，结构http://ip:port/index/type/_mappings:代表创建索引时，指定索引文档存储的属性的信息</code></pre><p>DELETE请求:</p><pre><code>http://ip:port/index:删除跑路http://ip:port/index/type/doc_id:删除指定的文档</code></pre></blockquote><h5 id="3-1-4-、属性Filed"><a href="#3-1-4-、属性Filed" class="headerlink" title="3.1.4 、属性Filed"></a>3.1.4 、属性Filed</h5><blockquote><p>一个文档中，可以包含多个属性。类似于Mysql中一行数据存在多个列。</p></blockquote><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173858.png" alt="image-20200807152414336"></p><h3 id="3-3、-索引的操作"><a href="#3-3、-索引的操作" class="headerlink" title="3.3、 索引的操作"></a>3.3、 索引的操作</h3><h5 id="3-3-1-、创建一个索引"><a href="#3-3-1-、创建一个索引" class="headerlink" title="3.3.1 、创建一个索引"></a>3.3.1 、创建一个索引</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 创建一个索引</span><br><span class="line">PUT /person</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;settings&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;number_of_shards&quot;</span>:<span class="number">5</span>,</span><br><span class="line">        <span class="attr">&quot;number_of_replicas&quot;</span>:<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-3-2-、查看索引信息"><a href="#3-3-2-、查看索引信息" class="headerlink" title="3.3.2 、查看索引信息"></a>3.3.2 、查看索引信息</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211173946.png" alt="image-20200807163753875"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看索引信息</span><br><span class="line">GET /person</span><br></pre></td></tr></table></figure><h5 id="3-3-3-、删除索引"><a href="#3-3-3-、删除索引" class="headerlink" title="3.3.3 、删除索引"></a>3.3.3 、删除索引</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除索引</span><br><span class="line">DELETE /person</span><br></pre></td></tr></table></figure><h3 id="3-4、ES中-Filed-可以指定的类型"><a href="#3-4、ES中-Filed-可以指定的类型" class="headerlink" title="3.4、ES中 Filed 可以指定的类型"></a>3.4、ES中 Filed 可以指定的类型</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># 字符串类型</span><br><span class="line">* text- 一般用于全文检索，将当前的filed进行分词</span><br><span class="line">* keyword- 当前的filed不会被分词</span><br><span class="line"></span><br><span class="line"># 数值类型</span><br><span class="line">* long</span><br><span class="line">* integer</span><br><span class="line">* short</span><br><span class="line">* byte</span><br><span class="line">* double</span><br><span class="line">* float</span><br><span class="line">* half_float- 精度比float小一半</span><br><span class="line">* scaled_float  - 根据一个long和一个scaled来表达一个浮点型，long-345,scaled-100  ----&gt;3.45</span><br><span class="line"></span><br><span class="line"># 时间类型</span><br><span class="line">* date类型，针对时间类型指定具体的格式</span><br><span class="line"></span><br><span class="line"># 布尔类型</span><br><span class="line">* Boolean类型，表达true和false</span><br><span class="line"></span><br><span class="line"># 二进制类型</span><br><span class="line">* binary类型暂时支持base64 encod string</span><br><span class="line"></span><br><span class="line"># 范围类型</span><br><span class="line">* long_range    - 赋值时，无需指定具体的内容，只需要存储一个范围即可，指定gt,lt,gte,lte</span><br><span class="line">* integer_range - 同上</span><br><span class="line">* double_range- 同上</span><br><span class="line">* float_range- 同上</span><br><span class="line">* date_range- 同上</span><br><span class="line">* ip_range- 同上</span><br><span class="line"></span><br><span class="line"># 经纬度类型</span><br><span class="line">* geo_point     - 用来存储经纬度</span><br><span class="line"></span><br><span class="line"># ip类型</span><br><span class="line">* ip        - 可以存储ipv4或者ipv6</span><br></pre></td></tr></table></figure><h3 id="3-5、创建索引并指定数据结构"><a href="#3-5、创建索引并指定数据结构" class="headerlink" title="3.5、创建索引并指定数据结构"></a>3.5、创建索引并指定数据结构</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"># 创建索引，并指定数据结构</span><br><span class="line">PUT /book</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;settings&quot;</span>: &#123;</span><br><span class="line">     # 分片数</span><br><span class="line">    <span class="string">&quot;number_of_shards&quot;</span>: <span class="number">5</span>,</span><br><span class="line">     # 备份数</span><br><span class="line">    <span class="string">&quot;number_of_replicas&quot;</span>: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">   # 指定数据结构</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    # 类型  Type</span><br><span class="line">    <span class="string">&quot;nover&quot;</span>:&#123;</span><br><span class="line">      # 文档存储的Filed 有哪些</span><br><span class="line">      <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">      # Filed的属性名</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:&#123;</span><br><span class="line">          # 属性的类型</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">          # 指定分词器</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">          # 指定当前的Filed可以被作为查询的条件</span><br><span class="line">          <span class="string">&quot;index&quot;</span>:<span class="string">&quot;true&quot;</span>,</span><br><span class="line">          # 是否需要额外存储，默认false</span><br><span class="line">          <span class="string">&quot;store&quot;</span>:<span class="string">&quot;false&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;author&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;count&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;long&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;onSale&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span>,</span><br><span class="line">           # 时间类型的格式化方式</span><br><span class="line">          <span class="string">&quot;format&quot;</span>:<span class="string">&quot;yyyy-MM-dd HH:mm:ss || yyyy-MM-dd || epoch_millis&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;descr&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-6、文档的操作"><a href="#3-6、文档的操作" class="headerlink" title="3.6、文档的操作"></a>3.6、文档的操作</h3><blockquote><p>文档在ES服务中的唯一标识，<code>_index</code>，<code>_type</code>，<code>_id</code> 三个内容为组合，锁定一个文档，来添加还是修改。</p></blockquote><h5 id="3-6-1、新建文档"><a href="#3-6-1、新建文档" class="headerlink" title="3.6.1、新建文档"></a>3.6.1、新建文档</h5><p><code>自动生成_id</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 添加文档，自动生成id</span><br><span class="line">POST /book/nover</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;盘龙&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>:<span class="string">&quot;我吃西红柿&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;count&quot;</span>:<span class="string">&quot;100000&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;onSale&quot;</span>:<span class="string">&quot;2009-01-01&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;descr&quot;</span>:<span class="string">&quot;大小的血睛鬃毛狮，力大无穷的紫睛金毛猿，毁天灭地的九头蛇皇，携带着毁灭雷电的恐怖雷龙……&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 返回的结果</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;book&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;nover&quot;</span>,</span><br><span class="line">  &quot;_id&quot; : &quot;Gq3H5nMBvQ2hcQ99m2Bc&quot;,    -----&gt; # 自动指定的id</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>手动指定_id</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 添加文档，手动生成id</span><br><span class="line">POST /book/nover/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;遮天&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>:<span class="string">&quot;辰东&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;count&quot;</span>:<span class="string">&quot;100000&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;onSale&quot;</span>:<span class="string">&quot;2008-01-01&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;descr&quot;</span>:<span class="string">&quot;冰冷与黑暗并存的宇宙深处，九具庞大的龙尸拉着一口青铜古棺，亘古长存。这是太空探测器在枯寂的宇宙中捕捉到的一幅极其震撼的画面。九龙拉棺，究竟是...&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 返回的结果</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;_index&quot;</span> : <span class="string">&quot;book&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;_type&quot;</span> : <span class="string">&quot;nover&quot;</span>,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,    -----&gt; # 手动指定的id</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 0,</span><br><span class="line">  &quot;_primary_term&quot; : 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-6-2、修改文档"><a href="#3-6-2、修改文档" class="headerlink" title="3.6.2、修改文档"></a>3.6.2、修改文档</h5><p><code>覆盖式修改</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 添加文档，自动生成id</span><br><span class="line">POST /book/nover/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;盘龙&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;author&quot;</span>:<span class="string">&quot;我吃西红柿&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;count&quot;</span>:<span class="string">&quot;100000&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;onSale&quot;</span>:<span class="string">&quot;2009-01-01&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;descr&quot;</span>:<span class="string">&quot;大小的血睛鬃毛狮，力大无穷的紫睛金毛猿，毁天灭地的九头蛇皇，携带着毁灭雷电的恐怖雷龙……&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>doc修改</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 修改文档，基于doc方式</span><br><span class="line">POST /book/nover/1/_update</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;doc&quot;</span>: &#123;</span><br><span class="line">     # 指定需要修改的filed和对应的值</span><br><span class="line">    &quot;count&quot;:&quot;123456&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-6-3、删除文档"><a href="#3-6-3、删除文档" class="headerlink" title="3.6.3、删除文档"></a>3.6.3、删除文档</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 根据id删除文档</span><br><span class="line">DELETE /book/nover/文档的id</span><br></pre></td></tr></table></figure><h1 id="四、Java操作ElasticSearch"><a href="#四、Java操作ElasticSearch" class="headerlink" title="四、Java操作ElasticSearch"></a>四、Java操作ElasticSearch</h1><h3 id="4-1、Java连接ES"><a href="#4-1、Java连接ES" class="headerlink" title="4.1、Java连接ES"></a>4.1、Java连接ES</h3><blockquote><p>1、创建Maven工程</p></blockquote><blockquote><p>2、导入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1、elasticsearch --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 2、elasticsearch高级API --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>elasticsearch-rest-high-level-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 3、junit --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 4、lombok --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>创建测试类，连接ES</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ESClint</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RestHighLevelClient <span class="title">getClient</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建HttpHost对象</span></span><br><span class="line">        HttpHost httpHost = <span class="keyword">new</span> HttpHost(<span class="string">&quot;localhost&quot;</span>,<span class="number">9200</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 restClientBuilder</span></span><br><span class="line">        RestClientBuilder clientBuilder = RestClient.builder(httpHost);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 RestHighLevelClient</span></span><br><span class="line">        RestHighLevelClient client = <span class="keyword">new</span> RestHighLevelClient(clientBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回</span></span><br><span class="line">        <span class="keyword">return</span> client;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="4-2、Java创建索引"><a href="#4-2、Java创建索引" class="headerlink" title="4.2、Java创建索引"></a>4.2、Java创建索引</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、准备索引的 settings</span></span><br><span class="line">        Settings.Builder settings = Settings.builder()</span><br><span class="line">                .put(<span class="string">&quot;number_of_shards&quot;</span>, <span class="number">3</span>)</span><br><span class="line">                .put(<span class="string">&quot;number_of_replicas&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、准备关于索引结构的 mappings</span></span><br><span class="line">        XContentBuilder mappings = JsonXContent.contentBuilder()</span><br><span class="line">                .startObject()</span><br><span class="line">                    .startObject(<span class="string">&quot;properties&quot;</span>)</span><br><span class="line">                        .startObject(<span class="string">&quot;name&quot;</span>)</span><br><span class="line">                            .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;text&quot;</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                        .startObject(<span class="string">&quot;age&quot;</span>)</span><br><span class="line">                            .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;integer&quot;</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                        .startObject(<span class="string">&quot;birthday&quot;</span>)</span><br><span class="line">                            .field(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;date&quot;</span>)</span><br><span class="line">                            .field(<span class="string">&quot;format&quot;</span>,<span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line">                        .endObject()</span><br><span class="line">                    .endObject()</span><br><span class="line">                .endObject();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、将settings 和 mappings 封装到request对象中</span></span><br><span class="line">        CreateIndexRequest request = <span class="keyword">new</span> CreateIndexRequest(index)</span><br><span class="line">                .settings(settings)</span><br><span class="line">                .mapping(type,mappings);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、通过 client 对象去连接 ES 创建索引</span></span><br><span class="line">        CreateIndexResponse response = client.indices().create(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、输出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;resp:&quot;</span>+response.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3、检查索引是否存在、删除索引"><a href="#4-3、检查索引是否存在、删除索引" class="headerlink" title="4.3、检查索引是否存在、删除索引"></a>4.3、检查索引是否存在、删除索引</h3><p><code>检查索引是否存在</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exists</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、准备request对象</span></span><br><span class="line">        GetIndexRequest request = <span class="keyword">new</span> GetIndexRequest();</span><br><span class="line">        request.indices(index);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、通过client去操作</span></span><br><span class="line">        <span class="keyword">boolean</span> exists = client.indices().exists(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、输出</span></span><br><span class="line">        System.out.println(exists);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、准备request对象</span></span><br><span class="line">        DeleteIndexRequest request = <span class="keyword">new</span> DeleteIndexRequest();</span><br><span class="line">        request.indices(index);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、通过client对象执行</span></span><br><span class="line">        AcknowledgedResponse delete = client.indices().delete(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、输出</span></span><br><span class="line">        System.out.println(delete.isAcknowledged());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>删除索引</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、准备request对象</span></span><br><span class="line">        DeleteIndexRequest request = <span class="keyword">new</span> DeleteIndexRequest();</span><br><span class="line">        request.indices(index);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、通过client对象执行</span></span><br><span class="line">        AcknowledgedResponse delete = client.indices().delete(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、输出</span></span><br><span class="line">        System.out.println(delete.isAcknowledged());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-、Java操作文档"><a href="#4-4-、Java操作文档" class="headerlink" title="4.4 、Java操作文档"></a>4.4 、Java操作文档</h3><h5 id="4-4-1、添加文档操作"><a href="#4-4-1、添加文档操作" class="headerlink" title="4.4.1、添加文档操作"></a>4.4.1、添加文档操作</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();     <span class="comment">// 获得jackson的mapper对象</span></span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createDoc</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、准备一组json数据</span></span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="number">1</span>,<span class="string">&quot;张三&quot;</span>,<span class="number">21</span>,<span class="keyword">new</span> Date());</span><br><span class="line">        String json = mapper.writeValueAsString(person);  <span class="comment">// 将person 对象序列化成json</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、准备request对象</span></span><br><span class="line">        IndexRequest request = <span class="keyword">new</span> IndexRequest(index,type,person.getId().toString());</span><br><span class="line">        request.source(json, XContentType.JSON);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过client对象操作</span></span><br><span class="line">        IndexResponse index = client.index(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        System.out.println(index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-4-2、修改文档"><a href="#4-4-2、修改文档" class="headerlink" title="4.4.2、修改文档"></a>4.4.2、修改文档</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建一个Map，指定需要修改的内容</span></span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;鸢九&quot;</span>);</span><br><span class="line">        String doc_id = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="comment">// 2、创建request对象，封装数据</span></span><br><span class="line">        UpdateRequest updateRequest = <span class="keyword">new</span> UpdateRequest(index,type,doc_id);</span><br><span class="line">        updateRequest.doc(map);</span><br><span class="line">        <span class="comment">// 3、通过client对象执行</span></span><br><span class="line">        UpdateResponse update = client.update(updateRequest, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        System.out.println(update);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="4-4-3、删除文档"><a href="#4-4-3、删除文档" class="headerlink" title="4.4.3、删除文档"></a>4.4.3、删除文档</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteDoc</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、直接封装request对象，根据id删除嘛</span></span><br><span class="line">        DeleteRequest request = <span class="keyword">new</span> DeleteRequest(index,type,<span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、通过client对象执行</span></span><br><span class="line">        DeleteResponse delete = client.delete(request,RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、输出</span></span><br><span class="line">        System.out.println(delete.getResult().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-4-4、Java批量操作文档"><a href="#4-4-4、Java批量操作文档" class="headerlink" title="4.4.4、Java批量操作文档"></a>4.4.4、Java批量操作文档</h5><p><strong>批量添加</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bulkCreatDoc</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、准备多个数据</span></span><br><span class="line">        Person person1 = <span class="keyword">new</span> Person(<span class="number">1</span>, <span class="string">&quot;张三&quot;</span>, <span class="number">23</span>, <span class="keyword">new</span> Date());</span><br><span class="line">        Person person2 = <span class="keyword">new</span> Person(<span class="number">2</span>, <span class="string">&quot;李四&quot;</span>, <span class="number">24</span>, <span class="keyword">new</span> Date());</span><br><span class="line">        Person person3 = <span class="keyword">new</span> Person(<span class="number">3</span>, <span class="string">&quot;王五&quot;</span>, <span class="number">25</span>, <span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        String json1 = mapper.writeValueAsString(person1);</span><br><span class="line">        String json2 = mapper.writeValueAsString(person2);</span><br><span class="line">        String json3 = mapper.writeValueAsString(person3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、创建Request，将多个数据封装进去</span></span><br><span class="line">        BulkRequest request = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">        request.add(<span class="keyword">new</span> IndexRequest(index,type,person1.getId().toString()).source(json1,XContentType.JSON));</span><br><span class="line">        request.add(<span class="keyword">new</span> IndexRequest(index,type,person2.getId().toString()).source(json2,XContentType.JSON));</span><br><span class="line">        request.add(<span class="keyword">new</span> IndexRequest(index,type,person3.getId().toString()).source(json3,XContentType.JSON));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、用client执行</span></span><br><span class="line">        BulkResponse bulk = client.bulk(request, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        System.out.println(bulk);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>批量删除</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    RestHighLevelClient client = ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;person&quot;</span>;</span><br><span class="line">    String type  = <span class="string">&quot;man&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bulkDeleteDoc</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、封装request对象</span></span><br><span class="line">        BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">        bulkRequest.add(<span class="keyword">new</span> DeleteRequest(index,type,<span class="string">&quot;2&quot;</span>));</span><br><span class="line">        bulkRequest.add(<span class="keyword">new</span> DeleteRequest(index,type,<span class="string">&quot;3&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、通过Client对象执行</span></span><br><span class="line">        BulkResponse bulk = client.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、输出</span></span><br><span class="line">        System.out.println(bulk);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、ElasticSearch练习"><a href="#五、ElasticSearch练习" class="headerlink" title="五、ElasticSearch练习"></a>五、ElasticSearch练习</h1><ul><li>索引 ： sms-logs-index</li><li>类型：sms-logs-type</li></ul><table><thead><tr><th>字段名称</th><th>备注</th></tr></thead><tbody><tr><td>createDate</td><td>创建时间String</td></tr><tr><td>sendDate</td><td>发送时间 date</td></tr><tr><td>longCode</td><td>发送长号码 如 16092389287811 string</td></tr><tr><td>Mobile</td><td>如 13000000000</td></tr><tr><td>corpName</td><td>发送公司名称，需要分词检索</td></tr><tr><td>smsContent</td><td>下发短信内容，需要分词检索</td></tr><tr><td>State</td><td>短信下发状态 0 成功 1 失败 integer</td></tr><tr><td>Operatorid</td><td>运营商编号1移动2联通3电信 integer</td></tr><tr><td>Province</td><td>省份</td></tr><tr><td>ipAddr</td><td>下发服务器IP地址</td></tr><tr><td>replyTotal</td><td>短信状态报告返回时长 integer</td></tr><tr><td>Fee</td><td>扣费 integer</td></tr></tbody></table><h3 id="5-1、POJO类"><a href="#5-1、POJO类" class="headerlink" title="5.1、POJO类"></a>5.1、POJO类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SmsLogs</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer Id;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date createDate;</span><br><span class="line">    <span class="meta">@JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Date sendDate;</span><br><span class="line">    <span class="keyword">private</span> String longCode;</span><br><span class="line">    <span class="keyword">private</span> String Mobile;</span><br><span class="line">    <span class="keyword">private</span> String CorpName;</span><br><span class="line">    <span class="keyword">private</span> String SmsContent;</span><br><span class="line">    <span class="keyword">private</span> Integer State;</span><br><span class="line">    <span class="keyword">private</span> Integer OperatorId;</span><br><span class="line">    <span class="keyword">private</span> String Province;</span><br><span class="line">    <span class="keyword">private</span> String IpAddr;</span><br><span class="line">    <span class="keyword">private</span> Integer ReplyTotal;</span><br><span class="line">    <span class="keyword">private</span> String Fee;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String doc = <span class="string">&quot;冰冷与黑暗并存的宇宙深处，九具庞大的龙尸拉着一口青铜古棺，亘古长存。&quot;</span> +<span class="string">&quot;这是太空探测器在枯寂的宇宙中捕捉到的一幅极其震撼的画面。九龙拉棺，究竟是回到了上古，还是来&quot;</span> +<span class="string">&quot;到了星空的彼岸？一个浩大的仙侠世界，光怪陆离，神秘无尽。热血似火山沸腾，激情若瀚海汹涌，欲&quot;</span> +<span class="string">&quot;望如深渊无止境……登天路，踏歌行，弹指遮天。激情若瀚海汹涌，欲望如深渊无止境……登天路，踏歌行，&quot;</span> +<span class="string">&quot;弹指遮天激情若瀚海汹涌，欲望如深渊无止境……登天路，踏歌行，弹指遮天激情若瀚海汹涌，欲望如深;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="5-2、创建索引和导入数据"><a href="#5-2、创建索引和导入数据" class="headerlink" title="5.2、创建索引和导入数据"></a>5.2、创建索引和导入数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> <span class="keyword">throws</span>  Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.准备关于索引的setting</span></span><br><span class="line">        Settings.Builder settings = Settings.builder()</span><br><span class="line">                .put(<span class="string">&quot;number_of_shards&quot;</span>, <span class="number">3</span>)</span><br><span class="line">                .put(<span class="string">&quot;number_of_replicas&quot;</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.准备关于索引的mapping</span></span><br><span class="line">        XContentBuilder mappings = JsonXContent.contentBuilder()</span><br><span class="line">                .startObject()</span><br><span class="line">                .startObject(<span class="string">&quot;properties&quot;</span>)</span><br><span class="line">                .startObject(<span class="string">&quot;corpName&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;createDate&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;date&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;format&quot;</span>, <span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;fee&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;long&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;ipAddr&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;ip&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;longCode&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;mobile&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;operatorId&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;province&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;keyword&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;replyTotal&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;sendDate&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;date&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;format&quot;</span>, <span class="string">&quot;yyyy-MM-dd&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;smsContent&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;text&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;analyzer&quot;</span>, <span class="string">&quot;ik_max_word&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .startObject(<span class="string">&quot;state&quot;</span>)</span><br><span class="line">                .field(<span class="string">&quot;type&quot;</span>, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">                .endObject()</span><br><span class="line">                .endObject()</span><br><span class="line">                .endObject();</span><br><span class="line">        <span class="comment">// 3.将settings和mappings 封装到到一个Request对象中</span></span><br><span class="line">        CreateIndexRequest request = <span class="keyword">new</span> CreateIndexRequest(index)</span><br><span class="line">                .settings(settings)</span><br><span class="line">                .mapping(type,mappings);</span><br><span class="line">        <span class="comment">// 4.使用client 去连接ES</span></span><br><span class="line">        CreateIndexResponse response = client.indices().create(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;response:&quot;</span>+response.toString());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">bulkCreateDoc</span><span class="params">()</span> <span class="keyword">throws</span>  Exception</span>&#123;</span><br><span class="line">        <span class="comment">// 1.准备多个json 对象</span></span><br><span class="line">        String longcode = <span class="string">&quot;1008687&quot;</span>;</span><br><span class="line">        String mobile =<span class="string">&quot;138340658&quot;</span>;</span><br><span class="line">        List&lt;String&gt; companies = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        companies.add(<span class="string">&quot;腾讯课堂&quot;</span>);</span><br><span class="line">        companies.add(<span class="string">&quot;阿里旺旺&quot;</span>);</span><br><span class="line">        companies.add(<span class="string">&quot;海尔电器&quot;</span>);</span><br><span class="line">        companies.add(<span class="string">&quot;海尔智家公司&quot;</span>);</span><br><span class="line">        companies.add(<span class="string">&quot;格力汽车&quot;</span>);</span><br><span class="line">        companies.add(<span class="string">&quot;苏宁易购&quot;</span>);</span><br><span class="line">        List&lt;String&gt; provinces = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        provinces.add(<span class="string">&quot;北京&quot;</span>);</span><br><span class="line">        provinces.add(<span class="string">&quot;重庆&quot;</span>);</span><br><span class="line">        provinces.add(<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">        provinces.add(<span class="string">&quot;晋城&quot;</span>);</span><br><span class="line"></span><br><span class="line">        BulkRequest bulkRequest = <span class="keyword">new</span> BulkRequest();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;<span class="number">16</span> ; i++) &#123;</span><br><span class="line">            Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">            SmsLogs s1 = <span class="keyword">new</span> SmsLogs();</span><br><span class="line">            s1.setId(i);</span><br><span class="line">            s1.setCreateDate(<span class="keyword">new</span> Date());</span><br><span class="line">            s1.setSendDate(<span class="keyword">new</span> Date());</span><br><span class="line">            s1.setLongCode(longcode+i);</span><br><span class="line">            s1.setMobile(mobile+<span class="number">2</span>*i);</span><br><span class="line">            s1.setCorpName(companies.get(i%<span class="number">5</span>));</span><br><span class="line">            s1.setSmsContent(SmsLogs.doc.substring((i-<span class="number">1</span>)*<span class="number">20</span>,i*<span class="number">20</span>));</span><br><span class="line">            s1.setState(i%<span class="number">2</span>);</span><br><span class="line">            s1.setOperatorId(i%<span class="number">3</span>);</span><br><span class="line">            s1.setProvince(provinces.get(i%<span class="number">4</span>));</span><br><span class="line">            s1.setIpAddr(<span class="string">&quot;127.0.0.&quot;</span>+i);</span><br><span class="line">            s1.setReplyTotal(i*<span class="number">3</span>);</span><br><span class="line">            s1.setFee(i*<span class="number">6</span>+<span class="string">&quot;&quot;</span>);</span><br><span class="line">            String json1  = mapper.writeValueAsString(s1);</span><br><span class="line">            bulkRequest.add(<span class="keyword">new</span> IndexRequest(index,type,s1.getId().toString()).source(json1, XContentType.JSON));</span><br><span class="line">            System.out.println(<span class="string">&quot;数据&quot;</span>+i+s1.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.client 执行</span></span><br><span class="line">        BulkResponse responses = client.bulk(bulkRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4.输出结果</span></span><br><span class="line">        System.out.println(responses.getItems().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六、ElasticSearch的各种查询"><a href="#六、ElasticSearch的各种查询" class="headerlink" title="六、ElasticSearch的各种查询"></a>六、ElasticSearch的各种查询</h1><h3 id="6-1、term-amp-terms查询"><a href="#6-1、term-amp-terms查询" class="headerlink" title="6.1、term&amp;terms查询"></a>6.1、term&amp;terms查询</h3><h5 id="6-1-1、term查询"><a href="#6-1-1、term查询" class="headerlink" title="6.1.1、term查询"></a>6.1.1、term查询</h5><blockquote><p>term的查询代表是完全匹配，搜索之前不会对你搜索的关键词进行分词，直接去文档分词库中匹配内容。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;: 0,# limit 的第一个 ？  </span><br><span class="line">  &quot;size&quot;: 5,# limit 的第二个 ？   这两个用来分页</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;term&quot;: &#123;</span><br><span class="line">      &quot;province&quot;: &#123;</span><br><span class="line">        &quot;value&quot;: &quot;上海&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java代码实现方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建request对象，基本所有的查询都使用SearchRequest</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件,并将查询条件封装到Request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.from(<span class="number">0</span>);</span><br><span class="line">        builder.size(<span class="number">5</span>);</span><br><span class="line">        builder.query(QueryBuilders.termQuery(<span class="string">&quot;province&quot;</span>,<span class="string">&quot;上海&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Clinet执行</span></span><br><span class="line">        SearchResponse search = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、返回结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : search.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-1-2、terms查询"><a href="#6-1-2、terms查询" class="headerlink" title="6.1.2、terms查询"></a>6.1.2、terms查询</h5><blockquote><p>terms和term的查询机制是一样的，都不会将指定的关键字进行分词，直接去分词库中匹配内容，找到相应的结果并返回。</p><p>terms是针对一个字段可能是多个值的时候使用。</p><p>term类似MySql中的：where   province = “上海”；</p><p>terms类似MySql中的：where   province = “上海” or  where   province = “北京”   or    where   province = “广州”；</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># terms查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;from&quot;</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="attr">&quot;size&quot;</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;terms&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;province&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;上海&quot;</span>,</span><br><span class="line">        <span class="string">&quot;北京&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java代码实现方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// terms查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termsQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并封装到Request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.from(<span class="number">0</span>);</span><br><span class="line">        builder.size(<span class="number">5</span>);</span><br><span class="line">        <span class="comment">// 指定多个查询条件</span></span><br><span class="line">        builder.query(QueryBuilders.termsQuery(<span class="string">&quot;province&quot;</span>,<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;北京&quot;</span>));</span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、获得结果遍历</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2、match查询"><a href="#6-2、match查询" class="headerlink" title="6.2、match查询"></a>6.2、match查询</h3><blockquote><p>match查询属于高级查询，他会根据你查询的字段类型不一样，采用不同的查询方式。</p><ul><li>查询是日期或者是数值的话，它会将基于你的字符串查询内容转换为日期或者数值对待。</li><li>如果查询的是一个不被分词的内容(keyword)，match查询不会对你查询的关键字进行分词。</li><li>如果查询的内容是一个可以被分词的内容(text)，，match查询会将你指定的查询内容根据一定的方式去分词，去分词库中匹配指定的内容。</li></ul><p>match查询，实际底层就是多个term查询，将多个term查询的结果封装到了一起。</p></blockquote><h5 id="6-2-1、match-all查询"><a href="#6-2-1、match-all查询" class="headerlink" title="6.2.1、match_all查询"></a>6.2.1、match_all查询</h5><blockquote><p>查询全部内容，不指定查询条件</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># match_all查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// match_all 查询</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// match_all 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">matchALLQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并封装到Request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.from(<span class="number">0</span>);</span><br><span class="line">        builder.size(<span class="number">10</span>);       <span class="comment">// ES默认值显示10条数据，如需展示更多，需要手动指定Size的大小</span></span><br><span class="line">        builder.query(QueryBuilders.matchAllQuery());</span><br><span class="line">        </span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client对象执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一共查询到&quot;</span>+resp.getHits().getHits().length+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-2-2、match查询"><a href="#6-2-2、match查询" class="headerlink" title="6.2.2、match查询"></a>6.2.2、match查询</h5><blockquote><p>指定一个Filed做为查询条件</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># match查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;踏歌行&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// match查询</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// match 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">matchQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并封装到Request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">           </span><br><span class="line">        <span class="comment">//------------------------------------------------------</span></span><br><span class="line">        builder.query(QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>,<span class="string">&quot;青铜古棺&quot;</span>));</span><br><span class="line">        <span class="comment">//------------------------------------------------</span></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client对象执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一共查询到&quot;</span>+resp.getHits().getHits().length+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-2-3、布尔match查询"><a href="#6-2-3、布尔match查询" class="headerlink" title="6.2.3、布尔match查询"></a>6.2.3、布尔match查询</h5><blockquote><p>基于一个Filed匹配的内容，采用and或者or的方式进行连接查询</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># 布尔match查询,基于 and</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;smsContent&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;青铜古棺 太空探测&quot;</span></span><br><span class="line">        , <span class="attr">&quot;operator&quot;</span>: <span class="string">&quot;and&quot;</span># 基于 and 连接，查询的内容既包括青铜古棺，又包括太空探测。</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 布尔match查询，基于 or</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;smsContent&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;青铜古棺 太空探测&quot;</span># 基于 and 连接，查询的内容是青铜古棺，也可以是太空探测。</span><br><span class="line">        , <span class="attr">&quot;operator&quot;</span>: <span class="string">&quot;or&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// booleanMatch 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">booleanMatchQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并封装到Request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        <span class="comment">// ES默认值显示10条数据，如需展示更多，需要手动指定Size的大小</span></span><br><span class="line">        <span class="comment">//------------------------------------------------------</span></span><br><span class="line">        builder.query(QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>,<span class="string">&quot;青铜古棺 太空探</span></span><br><span class="line"><span class="string">                                               // 选择 AND 或者 OR</span></span><br><span class="line"><span class="string">                                               测&quot;</span>).operator(Operator.AND));  </span><br><span class="line">        <span class="comment">//------------------------------------------------</span></span><br><span class="line">          request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client对象执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-2-4、multi-match查询"><a href="#6-2-4、multi-match查询" class="headerlink" title="6.2.4、multi_match查询"></a>6.2.4、multi_match查询</h5><blockquote><p>match是在一个Filed中筛选关键字，multi_match是一个关键字在多个Filed中查询</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># multi_match查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;query&quot;</span>: <span class="string">&quot;上海&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;fields&quot;</span>: [<span class="string">&quot;province&quot;</span>,<span class="string">&quot;smsContent&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">multiMatchQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定条件，添加进request</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.multiMatchQuery(<span class="string">&quot;上海&quot;</span>,<span class="string">&quot;province&quot;</span>,<span class="string">&quot;smsContent&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;一共查询到&quot;</span>+resp.getHits().getHits().length+<span class="string">&quot;条数据！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3、其它查询"><a href="#6-3、其它查询" class="headerlink" title="6.3、其它查询"></a>6.3、其它查询</h3><h5 id="6-3-1、id查询"><a href="#6-3-1、id查询" class="headerlink" title="6.3.1、id查询"></a>6.3.1、id查询</h5><blockquote><p>根据id查询，类似MySql中 where id = ？</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 根据id查询</span><br><span class="line">GET /sms-logs-index/sms-logs-type/1</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fingById</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建GetRequest</span></span><br><span class="line">        GetRequest request = <span class="keyword">new</span> GetRequest(index,type,<span class="string">&quot;1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、执行查询</span></span><br><span class="line">        GetResponse resp = client.get(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、遍历查询后的结果</span></span><br><span class="line">        Map&lt;String, Object&gt; map = resp.getSourceAsMap();</span><br><span class="line">        System.out.println(map);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-2、ids查询"><a href="#6-3-2、ids查询" class="headerlink" title="6.3.2、ids查询"></a>6.3.2、ids查询</h5><blockquote><p>根据多个id查询，类似MySql中 where id in (1,2,3….)</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 根据ids查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;ids&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;values&quot;</span>: [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findByIds</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并添加到request中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.idsQuery().addIds(<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client查询</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-3、prefix查询"><a href="#6-3-3、prefix查询" class="headerlink" title="6.3.3、prefix查询"></a>6.3.3、prefix查询</h5><blockquote><p>前缀查询，指定一段关键字做为前缀，从而查询以关键字开头的文档</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># prefix查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;prefix&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;corpName&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;海尔&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// prefix 前缀查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">prefixQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并添加到request中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.prefixQuery(<span class="string">&quot;corpName&quot;</span>,<span class="string">&quot;海尔&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client查询</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-4、fuzzy查询"><a href="#6-3-4、fuzzy查询" class="headerlink" title="6.3.4、fuzzy查询"></a>6.3.4、fuzzy查询</h5><blockquote><p>模糊查询，我们输入字符的大概，ES会根据输入的内容大概匹配一下结果</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># fuzzy查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;fuzzy&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;corpName&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;海尔电集&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;prefix_length&quot;</span>: <span class="number">3</span># 用来指定前面几个字符是不能出现错误的</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fuzzy 模糊查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fuzzyQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并添加到request中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.fuzzyQuery(<span class="string">&quot;corpName&quot;</span>,<span class="string">&quot;海尔电集&quot;</span>).prefixLength(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client查询</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-5、wildcard查询"><a href="#6-3-5、wildcard查询" class="headerlink" title="6.3.5、wildcard查询"></a>6.3.5、wildcard查询</h5><blockquote><p>通配查询，和MySql中的like是一个东西。可以在查询时，在字符串中通配符 * 和 占位符 ？</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># wildcard 查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;wildcard&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;corpName&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;格力*&quot;</span># 可以使用 * 和 ？ 指定通配符和占位符</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// wildcard 通配查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">wildCardQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并添加到request中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.wildcardQuery(<span class="string">&quot;corpName&quot;</span>,<span class="string">&quot;格力*&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、通过Client查询</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-6、range查询"><a href="#6-3-6、range查询" class="headerlink" title="6.3.6、range查询"></a>6.3.6、range查询</h5><blockquote><p>范围查询，只针对数值类型，对一个Filed进行大于或者小于范围</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># range 查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;fee&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;gte&quot;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">&quot;lte&quot;</span>: <span class="number">20</span></span><br><span class="line">          # 可以使用 gt：&gt;gte:&gt;=lt:&lt;lte:&lt;=</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// range 范围查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rangeQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并将其添加至Request</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.rangeQuery(<span class="string">&quot;fee&quot;</span>).gt(<span class="number">10</span>).lt(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行查询</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-3-7、regexp查询"><a href="#6-3-7、regexp查询" class="headerlink" title="6.3.7、regexp查询"></a>6.3.7、regexp查询</h5><blockquote><p>正则查询 ，通过你编写的正则表达式去匹配内容</p><p>PS：<a href="">prefix、fuzzy、wildcard 和 regexp 的查询效率相对比较低，在要求高效率的时候，尽量避免使用。</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># regexp 查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;regexp&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;mobile&quot;</span>: <span class="string">&quot;138[0-9]&#123;7&#125;&quot;</span># 编写正则表达式</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JAVA 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line"></span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// regexp 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">regexpQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定查询条件，并将其添加到request对象中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.regexpQuery(<span class="string">&quot;mobile&quot;</span>,<span class="string">&quot;138[0-9]&#123;7&#125;&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回的结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4、深分页Scroll"><a href="#6-4、深分页Scroll" class="headerlink" title="6.4、深分页Scroll"></a>6.4、深分页Scroll</h3><blockquote><p>ES对 from+Size是有限制的，from和size之和不能超过1w，超过后效率非常低。</p><p>原理：</p><p>from+size在ES查询数据的方式：</p><ul><li>第一步、将用户输入的关键字进行分词。</li><li>第二步、去分词库中进行检索，得到文档id。</li><li>第三步、去各个分片中拉取指定的数据(耗时较长)。</li><li>第四步、数据根据分数(score)进行排序(耗时较长)。</li><li>第五步、根据from的起始值，舍弃起始值之前的数据。</li><li>第六步、返回结果。</li></ul><p>Scroll+size在ES查询数据的方式：</p><ul><li>第一步、将用户输入的关键字进行分词。</li><li>第二步、去分词库中进行检索，得到文档id。</li><li>第三步、将文档的id存放在ES的上下文中，</li><li>第四步、根据你指定的size的个数去ES中检索指定个数的数据，拿完数据的文档id，会从上下文中移除。</li><li>第五步、如果需要下一页的内容，直接去上下文中找后续的内容。</li><li>第六步、循环第四步和第五步</li></ul><p><a href="">Scroll 查询方式、不适合做实时查询，因为他是查询后放在内存，只是根据size的大小来拿出一部分，下一页的话还是去内存拿查好的，直到拿完。</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># 执行scroll 查询，返回第一页数据，并且将文档id存放在上下文中</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search?scroll=1m# 指定文档的生存时间，1m=1分钟</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;size&quot;:2,# 每次查询的条数</span><br><span class="line">  &quot;sort&quot;:[# 排序，根据指定的字段进行排序 </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;fee&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;order&quot;</span>:<span class="string">&quot;desc&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 根据scroll查询下一页数据</span><br><span class="line">POST /_search/scroll</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;scroll_id&quot;</span>:# 根据第一步得到的scroll_id去指定</span><br><span class="line">  <span class="string">&quot;DnF1ZXJ5VGhlbkZldGNoAwAAAAAAAG6CFkNpUS0yRnNxU2g2bU9JQjBGWTNJV0EAAAAAAABugRZDaVEtMkZzcVNoNm1PSUIwRlkzSVdBAAAAAAAAboMWQ2lRLTJGc3FTaDZtT0lCMEZZM0lXQQ==&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scroll&quot;</span>:<span class="string">&quot;1m&quot;</span># scroll 的生存时间</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 删除scroll在上下文中的数据</span><br><span class="line">DELETE /_search/scroll/# scroll的id</span><br><span class="line">DnF1ZXJ5VGhlbkZldGNoAwAAAAAAAG6CFkNpUS0yRnNxU2g2bU9JQjBGWTNJV0EAAAAAAABugRZDaVEtMkZzcVNoNm1PSUIwRlkzSVdBAAAAAAAAboMWQ2lRLTJGc3FTaDZtT0lCMEZZM0lXQQ==</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现scroll查询、scroll下一页、删除scroll</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Scroll 查询</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo9</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scrollQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建SearchRequest</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定scroll的生存时间</span></span><br><span class="line">        request.scroll(TimeValue.timeValueMinutes(<span class="number">1L</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、指定查询条件，并添加到request中</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.matchAllQuery());   <span class="comment">// 查询条件</span></span><br><span class="line">        builder.size(<span class="number">3</span>);    <span class="comment">// 每次查多少条</span></span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、通过Client执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、获得Scroll_id</span></span><br><span class="line">        String scroll_Id = resp.getScrollId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、返回结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------首页---------------------&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">--------------------------------------------------------------------------------------------------</span><br><span class="line">    <span class="comment">// scroll 下一页</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="comment">// 7、创建SearchScrollRequest,开始下一页</span></span><br><span class="line">            SearchScrollRequest scrollRequest = <span class="keyword">new</span> SearchScrollRequest(scroll_Id);</span><br><span class="line">            <span class="comment">// 指定Scroll的生存时间</span></span><br><span class="line">            scrollRequest.scroll(TimeValue.timeValueMinutes(<span class="number">1L</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 8、执行查询，返回结果</span></span><br><span class="line">            SearchResponse searchResponse = client.scroll(scrollRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 9、是否最后一下，是否查到了数据</span></span><br><span class="line">            SearchHit[] hits = searchResponse.getHits().getHits();</span><br><span class="line">            <span class="keyword">if</span> (hits != <span class="keyword">null</span> &amp;&amp; hits.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;------------------------下一页---------------------&quot;</span>);</span><br><span class="line">                <span class="keyword">for</span> (SearchHit hit : searchResponse.getHits().getHits()) &#123;</span><br><span class="line">                    Map&lt;String, Object&gt; sourceAsMap = hit.getSourceAsMap();</span><br><span class="line">                    System.out.println(sourceAsMap);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;------------------------没有更多了---------------------&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">--------------------------------------------------------------------------------------------------</span><br><span class="line">    <span class="comment">// scroll 删除 </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 10、创建clearScroll</span></span><br><span class="line">        ClearScrollRequest clearScrollRequest = <span class="keyword">new</span> ClearScrollRequest();</span><br><span class="line">            <span class="comment">// 11、指定scroll_id</span></span><br><span class="line">        clearScrollRequest.addScrollId(scroll_Id);</span><br><span class="line">            <span class="comment">// 12、在上下文中删除scroll</span></span><br><span class="line">        client.clearScroll(clearScrollRequest,RequestOptions.DEFAULT);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-5、delete-by-query"><a href="#6-5、delete-by-query" class="headerlink" title="6.5、delete-by-query"></a>6.5、delete-by-query</h3><blockquote><p>根据term、match等方式查询删除文档，将查询出来的文档删除</p><p>ps：</p><p><a href="">如果你需要删除的内容，是index下的大部分内容，推荐创建一个全新的index，将需要保留的内容添加进全新的索引。</a></p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># delete-by-query</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_delete_by_query</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;fee&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;gte&quot;</span>: <span class="number">10</span>,</span><br><span class="line">        <span class="attr">&quot;lte&quot;</span>: <span class="number">20</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo10</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delteByQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建deleteByQuery</span></span><br><span class="line">        DeleteByQueryRequest deleteByQueryRequest = <span class="keyword">new</span> DeleteByQueryRequest(index);</span><br><span class="line">        deleteByQueryRequest.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定检索条件         和SearchRequest指定检索条件不一样</span></span><br><span class="line">        deleteByQueryRequest.setQuery(QueryBuilders.rangeQuery(<span class="string">&quot;fee&quot;</span>).gte(<span class="number">10</span>).lte(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行删除</span></span><br><span class="line">        BulkByScrollResponse bulkByScrollResponse = client.deleteByQuery(deleteByQueryRequest, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出返回结果</span></span><br><span class="line">        System.out.println(bulkByScrollResponse.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6、复合查询"><a href="#6-6、复合查询" class="headerlink" title="6.6、复合查询"></a>6.6、复合查询</h3><h5 id="6-6-1、bool查询"><a href="#6-6-1、bool查询" class="headerlink" title="6.6.1、bool查询"></a>6.6.1、bool查询</h5><blockquote><p>复合过滤器，将你的多个查询条件以一定的逻辑 组合在一起</p><ul><li>must：所有的条件以must组合在一起，表示 and 的意思。</li><li>must_not：将must_not中的条件，全部都不能匹配，表示 not 的意思。</li><li>should：所有的条件用 should 组合在一起表示 or 的意思。</li></ul></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"># 查询城市为上海或者北京</span><br><span class="line"># 运营商不能是联通</span><br><span class="line"># smscontent必须包含一口和太空</span><br><span class="line"># bool查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;should&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;province&quot;</span>: &#123;</span><br><span class="line">              <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;上海&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;province&quot;</span>: &#123;</span><br><span class="line">              <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;北京&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;must_not&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;operatorId&quot;</span>: &#123;</span><br><span class="line">              <span class="attr">&quot;value&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;九龙&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;拉棺&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo11</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">boolQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、添加执行条件</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        BoolQueryBuilder boolQuery = QueryBuilders.boolQuery();</span><br><span class="line">        <span class="comment">// 查询城市为上海或者北京</span></span><br><span class="line">        boolQuery.should(QueryBuilders.termQuery(<span class="string">&quot;province&quot;</span>,<span class="string">&quot;上海&quot;</span>));</span><br><span class="line">        boolQuery.should(QueryBuilders.termQuery(<span class="string">&quot;province&quot;</span>,<span class="string">&quot;北京&quot;</span>));</span><br><span class="line">        <span class="comment">// 运营商不能是联通</span></span><br><span class="line">        boolQuery.mustNot(QueryBuilders.termQuery(<span class="string">&quot;operatorId&quot;</span>,<span class="string">&quot;2&quot;</span>));</span><br><span class="line">        <span class="comment">//smscontent必须包含九龙和拉棺</span></span><br><span class="line">        boolQuery.must(QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>,<span class="string">&quot;九龙&quot;</span>));</span><br><span class="line">        boolQuery.must(QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>,<span class="string">&quot;拉棺&quot;</span>));</span><br><span class="line">        <span class="comment">// 把boolQuery添加进builder</span></span><br><span class="line">        builder.query(boolQuery);</span><br><span class="line">        <span class="comment">// 把检索条件添加进Request</span></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行操作</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-6-2、boosting查询"><a href="#6-6-2、boosting查询" class="headerlink" title="6.6.2、boosting查询"></a>6.6.2、boosting查询</h5><blockquote><p>boosting 查询可以帮助我们去影响查询后的score</p><ul><li>postive：postive中查询得到的内容，才会返回结果集。</li><li>negative：如果negative中查询的内容匹配，并且postive中查询的内容也匹配。我们可以操控negative_boost的指定系数，从而降低文档的score，查询结果的排序也会降低</li><li>negative_boost：指定系数，必须小于1.0.</li></ul><p>关于查询时文档的score时怎么计算的：</p><ul><li>搜索的关键字在文档中出现的频次越高，分数越高。</li><li>指定的文档内容越短，分数越高。</li><li>搜索时，指定的关键字会被分词，这个分词的内容，在分词库 中匹配的越多，分数越高。</li></ul></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># boosting 查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;boosting&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;positive&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;九龙拉棺&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;negative&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;上古&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;negative_boost&quot;</span>: <span class="number">0.2</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo11</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// boosting 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">boostingQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、添加执行条件</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        BoostingQueryBuilder boostingQueryBuilder = QueryBuilders.boostingQuery(</span><br><span class="line">                QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>, <span class="string">&quot;九龙拉棺&quot;</span>),</span><br><span class="line">                QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>, <span class="string">&quot;上古&quot;</span>)</span><br><span class="line">        ).negativeBoost(<span class="number">0.5f</span>);</span><br><span class="line">        <span class="comment">// 把boostingQueryBuilder添加进builder</span></span><br><span class="line">        builder.query(boostingQueryBuilder);</span><br><span class="line">        <span class="comment">// 把检索条件添加进Request</span></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行操作</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-7、filter查询"><a href="#6-7、filter查询" class="headerlink" title="6.7、filter查询"></a>6.7、filter查询</h3><blockquote><p>query：根据你查询的条件，去计算文档匹配度得到一个分数，并且根据分数进行排序，不会做缓存。</p><p>filter：根据你的查询条件去查询文档，不会去计算分数，而且filter会对经常过滤的数据进行缓存</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># filter 查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;filter&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;trem&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;corpName&quot;</span>:<span class="string">&quot;格力汽车&quot;</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;range&quot;</span>:&#123;</span><br><span class="line">            <span class="attr">&quot;fee&quot;</span>:&#123;</span><br><span class="line">              <span class="attr">&quot;lte&quot;</span>:<span class="number">4</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo12</span> </span>&#123;</span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// # filter 查询</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">filterQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建SearchRequest对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、添加执行条件</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        BoolQueryBuilder boolQuery = QueryBuilders.boolQuery();</span><br><span class="line">        boolQuery.filter(QueryBuilders.termQuery(<span class="string">&quot;corpName&quot;</span>,<span class="string">&quot;格力汽车&quot;</span>));</span><br><span class="line">        boolQuery.filter(QueryBuilders.rangeQuery(<span class="string">&quot;fee&quot;</span>).lte(<span class="number">4</span>));</span><br><span class="line">        <span class="comment">// 把boolQuery添加进builder</span></span><br><span class="line">        builder.query(boolQuery);</span><br><span class="line">        <span class="comment">// 把检索条件添加进Request</span></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行操作</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、遍历返回结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; result = hit.getSourceAsMap();</span><br><span class="line">            System.out.println(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-8、高亮查询"><a href="#6-8、高亮查询" class="headerlink" title="6.8、高亮查询"></a>6.8、高亮查询</h3><blockquote><p>高亮查询就是将用户输入的关键字，查询后，以特殊的样式返回在结果中。</p><p>高亮展示的数据，本身就是文档的一个Filed，单独将Filed以highlight的形式返回</p><p>ES中提供了一个highlight属性，用来高亮，和query同级别：</p><ul><li>fragment_size：高亮查询返回多少个字符</li><li>pre_tags：指定前缀标签，例如：<font color=red></li><li>post_tags：指定后缀标签，例如：</font></li><li>fileds：指定哪几个Filed字段以高亮形式返回</li></ul></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 高亮查询</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;smsContent&quot;</span>: <span class="string">&quot;九龙拉棺&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;highlight&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;fields&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;smsContent&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;pre_tags&quot;</span>: <span class="string">&quot;&lt;font color=red&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;post_tags&quot;</span>: <span class="string">&quot;&lt;/font&gt;&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;fragment_size&quot;</span>:<span class="number">10</span></span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 高亮查询</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo13</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">highLightQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request对象</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line">        <span class="comment">// 2、指定查询条件和高亮</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.query(QueryBuilders.matchQuery(<span class="string">&quot;smsContent&quot;</span>,<span class="string">&quot;九龙拉棺&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定高亮</span></span><br><span class="line">        HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder();</span><br><span class="line">        highlightBuilder.field(<span class="string">&quot;smsContent&quot;</span>,<span class="number">10</span>);</span><br><span class="line">        highlightBuilder.preTags(<span class="string">&quot;&lt;font color=&#x27;red&#x27;&gt;&quot;</span>);</span><br><span class="line">        highlightBuilder.postTags(<span class="string">&quot;&lt;font&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">        builder.highlighter(highlightBuilder);</span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出高亮结果</span></span><br><span class="line">        <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">            Map&lt;String, HighlightField&gt; highlightFields = hit.getHighlightFields();</span><br><span class="line">            System.out.println(highlightFields.get(<span class="string">&quot;smsContent&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-9、聚合查询"><a href="#6-9、聚合查询" class="headerlink" title="6.9、聚合查询"></a>6.9、聚合查询</h3><blockquote><p>ES的聚合查询和MySql的类似，但是要比MySql的丰富。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 聚合查询，RestFul语法</span><br><span class="line">POST /index/type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;聚合查询的名字(随意取)&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;cardinality(不同聚合函数的名字)&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;属性&quot;</span>: <span class="string">&quot;值&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-9-1、去重计数"><a href="#6-9-1、去重计数" class="headerlink" title="6.9.1、去重计数"></a>6.9.1、去重计数</h5><blockquote><p>在一次查询中，每条数据都有自己的省份，现在要统计不同的省份一共出现了几次？数据中有很多条可能省份都一样，我们需要去掉重复出现的，再统计一共出现了多少次。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 聚合查询，去重计数</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;agg&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;cardinality&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;field&quot;</span>: <span class="string">&quot;province&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聚合查询,去重计数</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo14</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cardinalityQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line">        <span class="comment">// 2、指定聚合查询的方式</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.aggregation(AggregationBuilders.cardinality(<span class="string">&quot;agg&quot;</span>).field(<span class="string">&quot;province&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出聚合查询的结果</span></span><br><span class="line">        Cardinality agg = resp.getAggregations().get(<span class="string">&quot;agg&quot;</span>);</span><br><span class="line">        System.out.println(agg.getValue());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="6-9-2、范围统计"><a href="#6-9-2、范围统计" class="headerlink" title="6.9.2、范围统计"></a>6.9.2、范围统计</h5><blockquote><p>统计一定范围内文档出现的个数</p><p>统计可以针对数值类行，也可以针对日期类型，也可以针对ip类型</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"># 聚合查询，范围内个数统计,数值类型</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;agg&quot;</span>: &#123;</span><br><span class="line">     <span class="attr">&quot;range&quot;</span>: &#123;</span><br><span class="line">       <span class="attr">&quot;field&quot;</span>: <span class="string">&quot;id&quot;</span>,</span><br><span class="line">       <span class="attr">&quot;ranges&quot;</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;from&quot;</span>: <span class="number">0</span>,</span><br><span class="line">           <span class="attr">&quot;to&quot;</span>: <span class="number">10</span></span><br><span class="line">         &#125;</span><br><span class="line">       ]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 聚合查询，范围内个数统计,日期类型</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;agg&quot;</span>: &#123;</span><br><span class="line">     <span class="attr">&quot;date_range&quot;</span>: &#123;</span><br><span class="line">       <span class="attr">&quot;field&quot;</span>: <span class="string">&quot;createDate&quot;</span>,</span><br><span class="line">       <span class="attr">&quot;format&quot;</span>: <span class="string">&quot;yyyy-MM-dd&quot;</span>, </span><br><span class="line">       <span class="attr">&quot;ranges&quot;</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;from&quot;</span>: <span class="string">&quot;2000-01-01&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;to&quot;</span>: <span class="string">&quot;2020-12-30&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;from&quot;</span>: <span class="string">&quot;2000-01-01&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;to&quot;</span>: <span class="string">&quot;2020-01-01&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">       ]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 聚合查询，范围内个数统计,IP类型</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;agg&quot;</span>: &#123;</span><br><span class="line">     <span class="attr">&quot;ip_range&quot;</span>: &#123;</span><br><span class="line">       <span class="attr">&quot;field&quot;</span>: <span class="string">&quot;ipAddr&quot;</span>,</span><br><span class="line">       <span class="attr">&quot;ranges&quot;</span>: [</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;from&quot;</span>: <span class="string">&quot;127.0.0.0&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;to&quot;</span>: <span class="string">&quot;127.0.0.30&quot;</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;from&quot;</span>: <span class="string">&quot;127.0.0.0&quot;</span>,</span><br><span class="line">           <span class="attr">&quot;to&quot;</span>: <span class="string">&quot;127.0.0.10&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">       ]</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聚合函数 范围统计</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo15</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rangeQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定聚合函数查询方式</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.aggregation(AggregationBuilders.range(<span class="string">&quot;agg&quot;</span>).field(<span class="string">&quot;id&quot;</span>).addRange(<span class="number">0</span>,<span class="number">10</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        Range agg = resp.getAggregations().get(<span class="string">&quot;agg&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Range.Bucket bucket : agg.getBuckets()) &#123;</span><br><span class="line">            String key = bucket.getKeyAsString();</span><br><span class="line">            Object from = bucket.getFrom();</span><br><span class="line">            Object to = bucket.getTo();</span><br><span class="line">            <span class="keyword">long</span> docCount = bucket.getDocCount();</span><br><span class="line">            System.out.println(<span class="string">&quot;key:--&gt;&quot;</span>+key);</span><br><span class="line">            System.out.println(<span class="string">&quot;from:--&gt;&quot;</span>+from);</span><br><span class="line">            System.out.println(<span class="string">&quot;to:--&gt;&quot;</span>+to);</span><br><span class="line">            System.out.println(<span class="string">&quot;docCount:--&gt;&quot;</span>+docCount);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-9-3、统计聚合"><a href="#6-9-3、统计聚合" class="headerlink" title="6.9.3、统计聚合"></a>6.9.3、统计聚合</h5><blockquote><p>它可以帮你查询指定Filed的最大值、最小值、平均值、平方和 ……..</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 聚合查询，统计聚合</span><br><span class="line">POST /sms-logs-index/sms-logs-type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;agg&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;extended_stats&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;field&quot;</span>: <span class="string">&quot;id&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 代码实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聚合函数 范围统计</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo15</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;sms-logs-index&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;sms-logs-type&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">extendedStatsQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建Request</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定聚合函数查询方式</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        builder.aggregation(AggregationBuilders.extendedStats(<span class="string">&quot;agg&quot;</span>).field(<span class="string">&quot;id&quot;</span>));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">        ExtendedStats agg = resp.getAggregations().get(<span class="string">&quot;agg&quot;</span>);</span><br><span class="line">        <span class="keyword">double</span> max = agg.getMax();</span><br><span class="line">        <span class="keyword">double</span> min = agg.getMin();</span><br><span class="line">        System.out.println(<span class="string">&quot;最大值为：&quot;</span>+max);</span><br><span class="line">        System.out.println(<span class="string">&quot;最小值为：&quot;</span>+min);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="6-10、地图经纬度搜索"><a href="#6-10、地图经纬度搜索" class="headerlink" title="6.10、地图经纬度搜索"></a>6.10、地图经纬度搜索</h3><blockquote><p>ES中提供了一种 geo_point 的数据类型来存储经纬度。</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"># 因为没有，我们可以创建一个简单的带 geo_point 的index</span><br><span class="line"></span><br><span class="line"># 创建一个带 geo_point 的 index</span><br><span class="line">PUT /map</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;number_of_shards&quot;</span>: <span class="number">5</span>, </span><br><span class="line">    <span class="attr">&quot;number_of_replicas&quot;</span>: <span class="number">1</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;map&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;location&quot;</span>:&#123;</span><br><span class="line">          <span class="attr">&quot;type&quot;</span>:<span class="string">&quot;geo_point&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 添加数据</span><br><span class="line"></span><br><span class="line">POST /map/map/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;天安门&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;location&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;lon&quot;</span>:<span class="number">116.403874</span>,</span><br><span class="line">    <span class="attr">&quot;lat&quot;</span>:<span class="number">39.915129</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /map/map/2</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;海定公园&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;location&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;lon&quot;</span>:<span class="number">116.301314</span>,</span><br><span class="line">    <span class="attr">&quot;lat&quot;</span>:<span class="number">39.99319</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">POST /map/map/3</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>:<span class="string">&quot;北京动物园&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;location&quot;</span>:&#123;</span><br><span class="line">    <span class="attr">&quot;lon&quot;</span>:<span class="number">116.343283</span>,</span><br><span class="line">    <span class="attr">&quot;lat&quot;</span>:<span class="number">39.949175</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-10-1、ES中地图的检索方式"><a href="#6-10-1、ES中地图的检索方式" class="headerlink" title="6.10.1、ES中地图的检索方式"></a>6.10.1、ES中地图的检索方式</h5><blockquote><ul><li>geo_distance：确定一个点搜索半径范围内的所有数据。</li><li>geo_bounding_box：以两个点确定一个矩形，获取矩形内所有的数据。</li><li>geo_polygon：以多个点确定一个多边形，获取多边形内的全部数据。</li></ul></blockquote><p><strong>geo_distance：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># geo_distance 查询</span><br><span class="line">POST /map/map/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;geo_distance&quot;</span>: &#123;</span><br><span class="line">      &quot;location&quot;: &#123;             # 确定一个点</span><br><span class="line">        &quot;lon&quot;:116.365705,</span><br><span class="line">        &quot;lat&quot;:39.909781</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;distance&quot;:4000,   # 确定半径范围</span><br><span class="line">      &quot;distance_type&quot;:&quot;arc&quot;    # 指定搜索的形状为圆形</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>geo_bounding_box：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># geo_bounding_box 查询</span><br><span class="line">POST /map/map/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;geo_bounding_box&quot;</span>:&#123;</span><br><span class="line">      <span class="attr">&quot;location&quot;</span>: &#123;</span><br><span class="line">          &quot;top_left&quot;:&#123;# 左上坐标点</span><br><span class="line">            &quot;lon&quot;:116.238504,</span><br><span class="line">            &quot;lat&quot;:40.043363</span><br><span class="line">          &#125;,</span><br><span class="line">          &quot;bottom_right&quot;:&#123;# 右下坐标点</span><br><span class="line">            &quot;lon&quot;:116.492905,</span><br><span class="line">            &quot;lat&quot;:39.799223</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>geo_polygon：</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># geo_polyon 查询</span><br><span class="line">POST /map/map/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;geo_polygon&quot;</span>:&#123;</span><br><span class="line">       <span class="attr">&quot;location&quot;</span>: &#123;</span><br><span class="line">         <span class="attr">&quot;points&quot;</span>:[# 确定多个点</span><br><span class="line">         &#123;</span><br><span class="line">            <span class="attr">&quot;lon&quot;</span>:<span class="number">116.408248</span>,</span><br><span class="line">            <span class="attr">&quot;lat&quot;</span>:<span class="number">39.968643</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;lon&quot;</span>:<span class="number">116.310225</span>,</span><br><span class="line">            <span class="attr">&quot;lat&quot;</span>:<span class="number">39.879224</span></span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">           <span class="attr">&quot;lon&quot;</span>:<span class="number">116.50081</span>,</span><br><span class="line">            <span class="attr">&quot;lat&quot;</span>:<span class="number">39.874351</span></span><br><span class="line">         &#125;</span><br><span class="line">         ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-11、基于geo-polygon使用Java实现查询"><a href="#6-11、基于geo-polygon使用Java实现查询" class="headerlink" title="6.11、基于geo_polygon使用Java实现查询"></a>6.11、基于geo_polygon使用Java实现查询</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Java 实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 地图检索</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo16</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    RestHighLevelClient client =  ESClint.getClient();</span><br><span class="line">    String index = <span class="string">&quot;map&quot;</span>;</span><br><span class="line">    String type=<span class="string">&quot;map&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">geoQuery</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、常见SearchRequest</span></span><br><span class="line">        SearchRequest request = <span class="keyword">new</span> SearchRequest(index);</span><br><span class="line">        request.types(type);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、指定检索条件</span></span><br><span class="line">        SearchSourceBuilder builder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">        <span class="comment">// 添加三个坐标</span></span><br><span class="line">        ArrayList&lt;GeoPoint&gt; points = <span class="keyword">new</span> ArrayList&lt;GeoPoint&gt;();</span><br><span class="line">        points.add(<span class="keyword">new</span> GeoPoint(<span class="number">39.968643</span>,<span class="number">116.408248</span>));</span><br><span class="line">        points.add(<span class="keyword">new</span> GeoPoint(<span class="number">39.879224</span>,<span class="number">116.310225</span>));</span><br><span class="line">        points.add(<span class="keyword">new</span> GeoPoint(<span class="number">39.874351</span>,<span class="number">116.50081</span>));</span><br><span class="line">        builder.query(QueryBuilders.geoPolygonQuery(<span class="string">&quot;location&quot;</span>,points));</span><br><span class="line"></span><br><span class="line">        request.source(builder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、执行</span></span><br><span class="line">        SearchResponse resp = client.search(request, RequestOptions.DEFAULT);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、输出</span></span><br><span class="line">            <span class="keyword">for</span> (SearchHit hit : resp.getHits().getHits()) &#123;</span><br><span class="line">                System.out.println(hit.getSourceAsMap());</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提取Wallpaper Engine中的壁纸</title>
      <link href="posts/b5c2b25e/"/>
      <url>posts/b5c2b25e/</url>
      
        <content type="html"><![CDATA[<p>前几天在浏览Wallpaper Engine的时候发现了一张好漂亮的壁纸 ，查看源文件后发现只有一张模糊的图片。</p><p>后来看到有位大佬的工具可以提取壁纸！</p><p><font color= red>大佬的地址</font>：<a href="http://blog.repeater.vip/?p=196">http://blog.repeater.vip/?p=196</a></p><h3 id="提取步骤"><a href="#提取步骤" class="headerlink" title="提取步骤"></a>提取步骤</h3><h5 id="1、下载解压的工具"><a href="#1、下载解压的工具" class="headerlink" title="1、下载解压的工具"></a>1、下载解压的工具</h5><h5 id="2、找到壁纸源文件中的pkg结尾的文件"><a href="#2、找到壁纸源文件中的pkg结尾的文件" class="headerlink" title="2、找到壁纸源文件中的pkg结尾的文件"></a>2、找到壁纸源文件中的pkg结尾的文件</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211162736.png" alt="image-20201211162736556"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211163002.png" alt="image-20201211163002821"></p><h5 id="3、在任意地方新建一个文件夹，将解压软件后和pkg文件一同放入到新建的目录中"><a href="#3、在任意地方新建一个文件夹，将解压软件后和pkg文件一同放入到新建的目录中" class="headerlink" title="3、在任意地方新建一个文件夹，将解压软件后和pkg文件一同放入到新建的目录中"></a>3、在任意地方新建一个文件夹，将解压软件后和pkg文件一同放入到新建的目录中</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211163529.png" alt="image-20201211163529049"></p><h5 id="4、运行解包程序，获得壁纸"><a href="#4、运行解包程序，获得壁纸" class="headerlink" title="4、运行解包程序，获得壁纸"></a>4、运行解包程序，获得壁纸</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211163923.png" alt="image-20201211163923592"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211164007.png" alt="image-20201211164007767"></p><blockquote><p>wallpaper engine壁纸如果没有pkg文件的话为视频壁纸，无法提取。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Wallpaper Engine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora + PicGo + Gitee 实现免费的图床</title>
      <link href="posts/ae713651/"/>
      <url>posts/ae713651/</url>
      
        <content type="html"><![CDATA[<p>Typora + PicGo + Gitee 实现免费的图床，让typora更加的顺滑！</p><p>在最开始使用Typora写博客的时候，是知道有这个功能的。网上看了一圈之后感觉有点麻烦就放弃了，直到前几天写了一篇包含大量的图文的博文时。在本地看还好，上传到网上就杯具了。于是又想起了之前的事，琢磨下感觉异常的简单…..</p><a id="more"></a><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><h5 id="1、安装Node-js"><a href="#1、安装Node-js" class="headerlink" title="1、安装Node.js"></a>1、安装Node.js</h5><p>官网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130152233.png" alt="image-20201130152232959"></p><h5 id="2、安装PicGo"><a href="#2、安装PicGo" class="headerlink" title="2、安装PicGo"></a>2、安装PicGo</h5><p>官网：<a href="https://github.com/Molunerfinn/picgo/releases">https://github.com/Molunerfinn/picgo/releases</a></p><p>最新版目前是2.3.0，我们选择稳定的2.2.2版就行了</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130153701.png" alt="image-20201130153701274"></p><h5 id="3、在gitee上新建一个仓库当作图床"><a href="#3、在gitee上新建一个仓库当作图床" class="headerlink" title="3、在gitee上新建一个仓库当作图床"></a>3、在gitee上新建一个仓库当作图床</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130155112.png" alt="image-20201130155112427"></p><h5 id="4、生成Token"><a href="#4、生成Token" class="headerlink" title="4、生成Token"></a>4、生成Token</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130155720.png" alt="image-20201130155720276"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130160337.png" alt="image-20201130160337336"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130160518.png" alt="image-20201130160518376"></p><h5 id="5、配置PicGo"><a href="#5、配置PicGo" class="headerlink" title="5、配置PicGo"></a>5、配置PicGo</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130160731.png" alt="image-20201130160731553"></p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130161703.png" alt="image-20201130161703751"></p><h5 id="6、Typora配置"><a href="#6、Typora配置" class="headerlink" title="6、Typora配置"></a>6、Typora配置</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130162306.png" alt="image-20201130162306273"></p><h5 id="7、测试"><a href="#7、测试" class="headerlink" title="7、测试"></a>7、测试</h5><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201130162639.png" alt="image-20201130162639436"></p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> PicGo </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lombok使用</title>
      <link href="posts/1a78bb16/"/>
      <url>posts/1a78bb16/</url>
      
        <content type="html"><![CDATA[<p>Lombok是一个java库，它可以自动插入编辑器并构建工具，为java增色。</p><p>永远不要再编写另一个getter或equals方法，使用一个注释，您的类就有了一个功能齐全的构建器，自动化您的日志变量，等等。</p><a id="more"></a><ul><li><p>基本使用</p><p>1、首先我们需要导入jar包</p><p><a href="https://repo1.maven.org/maven2/org/projectlombok/lombok/1.18.10/lombok-1.18.10.jar">点击下载 jar包-1.18.10</a></p><pre><code>如果使用Maven构建项目的话，直接导入就OK了</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、我们需要去idea的插件市场下载lombok，安装完成重启idea即可</p><p><img src= "/img/loading.gif" data-lazy-src="https://gitee.com/quehua/blogimg/raw/master/img/20201211114318.png" alt="Lombok"></p></li><li><p>常用的注解应用及功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//作用类上，生成所有成员变量的getter/setter方法;</span></span><br><span class="line"><span class="comment">//作用于成员变量上，生成该成员变量的getter/setter方法。</span></span><br><span class="line"><span class="meta">@Getter</span> and <span class="meta">@Setter</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//主要作用于成员变量和参数中，标识不能为空，否则抛出空指针异常。    </span></span><br><span class="line"><span class="meta">@NonNull</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//作用于类，覆盖默认的toString()方法</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//作用于类，覆盖默认的equals和hashCode</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//@AllArgsConstructor:生成全参构造器</span></span><br><span class="line"><span class="comment">//@NoArgsConstructor:生成无参构造器</span></span><br><span class="line"><span class="comment">//@RequiredArgsConstructor:生成包含final和@NonNull注解的成员变量的构造器</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span>, <span class="meta">@RequiredArgsConstructor</span> and <span class="meta">@NoArgsConstructor</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//作用于类上，生成日志变量。针对不同的日志实现产品，有不同的注解</span></span><br><span class="line"><span class="meta">@Log</span>, <span class="meta">@Log4j</span>, <span class="meta">@Log4j2</span>, <span class="meta">@Slf4j</span>, <span class="meta">@XSlf4j</span>, <span class="meta">@CommonsLog</span>, <span class="meta">@JBossLog</span>, <span class="meta">@Flogger</span>, <span class="meta">@CustomLog</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//作用于类上，是以下注解的集合：@ToString @EqualsAndHashCode @Getter</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//作用于类上，将类转变为建造者模式</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line">       </span><br><span class="line"><span class="comment">//可以对受检异常进行捕捉并抛出</span></span><br><span class="line"><span class="meta">@SneakyThrows</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Lombok </tag>
            
            <tag> Java </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
